ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"PWM_4.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	PWM_4_initVar
  19              		.bss
  20              		.type	PWM_4_initVar, %object
  21              		.size	PWM_4_initVar, 1
  22              	PWM_4_initVar:
  23 0000 00       		.space	1
  24              		.section	.text.PWM_4_Start,"ax",%progbits
  25              		.align	2
  26              		.global	PWM_4_Start
  27              		.thumb
  28              		.thumb_func
  29              		.type	PWM_4_Start, %function
  30              	PWM_4_Start:
  31              	.LFB0:
  32              		.file 1 ".\\Generated_Source\\PSoC5\\PWM_4.c"
   1:.\Generated_Source\PSoC5/PWM_4.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/PWM_4.c **** * File Name: PWM_4.c  
   3:.\Generated_Source\PSoC5/PWM_4.c **** * Version 3.0
   4:.\Generated_Source\PSoC5/PWM_4.c **** *
   5:.\Generated_Source\PSoC5/PWM_4.c **** * Description:
   6:.\Generated_Source\PSoC5/PWM_4.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC5/PWM_4.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC5/PWM_4.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC5/PWM_4.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks. 
  10:.\Generated_Source\PSoC5/PWM_4.c **** *  The compare value output may be configured to be active when the present 
  11:.\Generated_Source\PSoC5/PWM_4.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC5/PWM_4.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC5/PWM_4.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC5/PWM_4.c **** *
  15:.\Generated_Source\PSoC5/PWM_4.c **** * Note:
  16:.\Generated_Source\PSoC5/PWM_4.c **** *
  17:.\Generated_Source\PSoC5/PWM_4.c **** *******************************************************************************
  18:.\Generated_Source\PSoC5/PWM_4.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC5/PWM_4.c **** * You may use this file only in accordance with the license, terms, conditions, 
  20:.\Generated_Source\PSoC5/PWM_4.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  21:.\Generated_Source\PSoC5/PWM_4.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC5/PWM_4.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC5/PWM_4.c **** 
  24:.\Generated_Source\PSoC5/PWM_4.c **** #include "cytypes.h"
  25:.\Generated_Source\PSoC5/PWM_4.c **** #include "PWM_4.h"
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 2


  26:.\Generated_Source\PSoC5/PWM_4.c **** 
  27:.\Generated_Source\PSoC5/PWM_4.c **** uint8 PWM_4_initVar = 0u;
  28:.\Generated_Source\PSoC5/PWM_4.c **** 
  29:.\Generated_Source\PSoC5/PWM_4.c **** 
  30:.\Generated_Source\PSoC5/PWM_4.c **** /*******************************************************************************
  31:.\Generated_Source\PSoC5/PWM_4.c **** * Function Name: PWM_4_Start
  32:.\Generated_Source\PSoC5/PWM_4.c **** ********************************************************************************
  33:.\Generated_Source\PSoC5/PWM_4.c **** *
  34:.\Generated_Source\PSoC5/PWM_4.c **** * Summary:
  35:.\Generated_Source\PSoC5/PWM_4.c **** *  The start function initializes the pwm with the default values, the 
  36:.\Generated_Source\PSoC5/PWM_4.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  37:.\Generated_Source\PSoC5/PWM_4.c **** *  the EnableInt command should be called if interrupt generation is required.
  38:.\Generated_Source\PSoC5/PWM_4.c **** *
  39:.\Generated_Source\PSoC5/PWM_4.c **** * Parameters:  
  40:.\Generated_Source\PSoC5/PWM_4.c **** *  None  
  41:.\Generated_Source\PSoC5/PWM_4.c **** *
  42:.\Generated_Source\PSoC5/PWM_4.c **** * Return: 
  43:.\Generated_Source\PSoC5/PWM_4.c **** *  None
  44:.\Generated_Source\PSoC5/PWM_4.c **** *
  45:.\Generated_Source\PSoC5/PWM_4.c **** * Global variables:
  46:.\Generated_Source\PSoC5/PWM_4.c **** *  PWM_4_initVar: Is modified when this function is called for the 
  47:.\Generated_Source\PSoC5/PWM_4.c **** *   first time. Is used to ensure that initialization happens only once.
  48:.\Generated_Source\PSoC5/PWM_4.c **** *
  49:.\Generated_Source\PSoC5/PWM_4.c **** *******************************************************************************/
  50:.\Generated_Source\PSoC5/PWM_4.c **** void PWM_4_Start(void) 
  51:.\Generated_Source\PSoC5/PWM_4.c **** {
  33              		.loc 1 51 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 0
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 00AF     		add	r7, sp, #0
  43              	.LCFI1:
  44              		.cfi_def_cfa_register 7
  52:.\Generated_Source\PSoC5/PWM_4.c ****     /* If not Initialized then initialize all required hardware and software */
  53:.\Generated_Source\PSoC5/PWM_4.c ****     if(PWM_4_initVar == 0u)
  45              		.loc 1 53 0
  46 0004 40F20003 		movw	r3, #:lower16:PWM_4_initVar
  47 0008 C0F20003 		movt	r3, #:upper16:PWM_4_initVar
  48 000c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
  49 000e 002B     		cmp	r3, #0
  50 0010 08D1     		bne	.L2
  54:.\Generated_Source\PSoC5/PWM_4.c ****     {
  55:.\Generated_Source\PSoC5/PWM_4.c ****         PWM_4_Init();
  51              		.loc 1 55 0
  52 0012 FFF7FEFF 		bl	PWM_4_Init
  56:.\Generated_Source\PSoC5/PWM_4.c ****         PWM_4_initVar = 1u;
  53              		.loc 1 56 0
  54 0016 40F20003 		movw	r3, #:lower16:PWM_4_initVar
  55 001a C0F20003 		movt	r3, #:upper16:PWM_4_initVar
  56 001e 4FF00102 		mov	r2, #1
  57 0022 1A70     		strb	r2, [r3, #0]
  58              	.L2:
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 3


  57:.\Generated_Source\PSoC5/PWM_4.c ****     }
  58:.\Generated_Source\PSoC5/PWM_4.c ****     PWM_4_Enable();
  59              		.loc 1 58 0
  60 0024 FFF7FEFF 		bl	PWM_4_Enable
  59:.\Generated_Source\PSoC5/PWM_4.c **** 
  60:.\Generated_Source\PSoC5/PWM_4.c **** }
  61              		.loc 1 60 0
  62 0028 80BD     		pop	{r7, pc}
  63              		.cfi_endproc
  64              	.LFE0:
  65              		.size	PWM_4_Start, .-PWM_4_Start
  66 002a 00BF     		.section	.text.PWM_4_Init,"ax",%progbits
  67              		.align	2
  68              		.global	PWM_4_Init
  69              		.thumb
  70              		.thumb_func
  71              		.type	PWM_4_Init, %function
  72              	PWM_4_Init:
  73              	.LFB1:
  61:.\Generated_Source\PSoC5/PWM_4.c **** 
  62:.\Generated_Source\PSoC5/PWM_4.c **** 
  63:.\Generated_Source\PSoC5/PWM_4.c **** /*******************************************************************************
  64:.\Generated_Source\PSoC5/PWM_4.c **** * Function Name: PWM_4_Init
  65:.\Generated_Source\PSoC5/PWM_4.c **** ********************************************************************************
  66:.\Generated_Source\PSoC5/PWM_4.c **** *
  67:.\Generated_Source\PSoC5/PWM_4.c **** * Summary:
  68:.\Generated_Source\PSoC5/PWM_4.c **** *  Initialize component's parameters to the parameters set by user in the 
  69:.\Generated_Source\PSoC5/PWM_4.c **** *  customizer of the component placed onto schematic. Usually called in 
  70:.\Generated_Source\PSoC5/PWM_4.c **** *  PWM_4_Start().
  71:.\Generated_Source\PSoC5/PWM_4.c **** *
  72:.\Generated_Source\PSoC5/PWM_4.c **** * Parameters:  
  73:.\Generated_Source\PSoC5/PWM_4.c **** *  None
  74:.\Generated_Source\PSoC5/PWM_4.c **** *
  75:.\Generated_Source\PSoC5/PWM_4.c **** * Return: 
  76:.\Generated_Source\PSoC5/PWM_4.c **** *  None
  77:.\Generated_Source\PSoC5/PWM_4.c **** *
  78:.\Generated_Source\PSoC5/PWM_4.c **** *******************************************************************************/
  79:.\Generated_Source\PSoC5/PWM_4.c **** void PWM_4_Init(void) 
  80:.\Generated_Source\PSoC5/PWM_4.c **** {
  74              		.loc 1 80 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 8
  77              		@ frame_needed = 1, uses_anonymous_args = 0
  78 0000 80B5     		push	{r7, lr}
  79              	.LCFI2:
  80              		.cfi_def_cfa_offset 8
  81              		.cfi_offset 7, -8
  82              		.cfi_offset 14, -4
  83 0002 82B0     		sub	sp, sp, #8
  84              	.LCFI3:
  85              		.cfi_def_cfa_offset 16
  86 0004 00AF     		add	r7, sp, #0
  87              	.LCFI4:
  88              		.cfi_def_cfa_register 7
  81:.\Generated_Source\PSoC5/PWM_4.c ****     #if (PWM_4_UsingFixedFunction || PWM_4_UseControl)
  82:.\Generated_Source\PSoC5/PWM_4.c ****         uint8 ctrl;
  83:.\Generated_Source\PSoC5/PWM_4.c ****     #endif /* (PWM_4_UsingFixedFunction || PWM_4_UseControl) */
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 4


  84:.\Generated_Source\PSoC5/PWM_4.c ****     
  85:.\Generated_Source\PSoC5/PWM_4.c ****     #if(!PWM_4_UsingFixedFunction) 
  86:.\Generated_Source\PSoC5/PWM_4.c ****         #if(PWM_4_UseStatus)
  87:.\Generated_Source\PSoC5/PWM_4.c ****             /* Interrupt State Backup for Critical Region*/
  88:.\Generated_Source\PSoC5/PWM_4.c ****             uint8 PWM_4_interruptState;
  89:.\Generated_Source\PSoC5/PWM_4.c ****         #endif /* (PWM_4_UseStatus) */
  90:.\Generated_Source\PSoC5/PWM_4.c ****     #endif /* (!PWM_4_UsingFixedFunction) */
  91:.\Generated_Source\PSoC5/PWM_4.c ****     
  92:.\Generated_Source\PSoC5/PWM_4.c ****     #if (PWM_4_UsingFixedFunction)
  93:.\Generated_Source\PSoC5/PWM_4.c ****         /* You are allowed to write the compare value (FF only) */
  94:.\Generated_Source\PSoC5/PWM_4.c ****         PWM_4_CONTROL |= PWM_4_CFG0_MODE;
  89              		.loc 1 94 0
  90 0006 4FF49E43 		mov	r3, #20224
  91 000a C4F20003 		movt	r3, 16384
  92 000e 4FF49E42 		mov	r2, #20224
  93 0012 C4F20002 		movt	r2, 16384
  94 0016 1278     		ldrb	r2, [r2, #0]
  95 0018 D2B2     		uxtb	r2, r2
  96 001a 42F00202 		orr	r2, r2, #2
  97 001e D2B2     		uxtb	r2, r2
  98 0020 1A70     		strb	r2, [r3, #0]
  95:.\Generated_Source\PSoC5/PWM_4.c ****         #if (PWM_4_DeadBand2_4)
  96:.\Generated_Source\PSoC5/PWM_4.c ****             PWM_4_CONTROL |= PWM_4_CFG0_DB;
  97:.\Generated_Source\PSoC5/PWM_4.c ****         #endif /* (PWM_4_DeadBand2_4) */
  98:.\Generated_Source\PSoC5/PWM_4.c ****                 
  99:.\Generated_Source\PSoC5/PWM_4.c ****         ctrl = PWM_4_CONTROL3 & ((uint8 )(~PWM_4_CTRL_CMPMODE1_MASK));
  99              		.loc 1 99 0
 100 0022 44F60273 		movw	r3, #20226
 101 0026 C4F20003 		movt	r3, 16384
 102 002a 1B78     		ldrb	r3, [r3, #0]
 103 002c DBB2     		uxtb	r3, r3
 104 002e 23F07003 		bic	r3, r3, #112
 105 0032 FB71     		strb	r3, [r7, #7]
 100:.\Generated_Source\PSoC5/PWM_4.c ****         PWM_4_CONTROL3 = ctrl | PWM_4_DEFAULT_COMPARE1_MODE;
 106              		.loc 1 100 0
 107 0034 44F60273 		movw	r3, #20226
 108 0038 C4F20003 		movt	r3, 16384
 109 003c FA79     		ldrb	r2, [r7, #7]
 110 003e 42F01002 		orr	r2, r2, #16
 111 0042 D2B2     		uxtb	r2, r2
 112 0044 1A70     		strb	r2, [r3, #0]
 101:.\Generated_Source\PSoC5/PWM_4.c ****         
 102:.\Generated_Source\PSoC5/PWM_4.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 103:.\Generated_Source\PSoC5/PWM_4.c ****         PWM_4_RT1 &= ((uint8)(~PWM_4_RT1_MASK));
 113              		.loc 1 103 0
 114 0046 44F60B73 		movw	r3, #20235
 115 004a C4F20003 		movt	r3, 16384
 116 004e 44F60B72 		movw	r2, #20235
 117 0052 C4F20002 		movt	r2, 16384
 118 0056 1278     		ldrb	r2, [r2, #0]
 119 0058 D2B2     		uxtb	r2, r2
 120 005a 22F03002 		bic	r2, r2, #48
 121 005e D2B2     		uxtb	r2, r2
 122 0060 1A70     		strb	r2, [r3, #0]
 104:.\Generated_Source\PSoC5/PWM_4.c ****         PWM_4_RT1 |= PWM_4_SYNC;     
 123              		.loc 1 104 0
 124 0062 44F60B73 		movw	r3, #20235
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 5


 125 0066 C4F20003 		movt	r3, 16384
 126 006a 44F60B72 		movw	r2, #20235
 127 006e C4F20002 		movt	r2, 16384
 128 0072 1278     		ldrb	r2, [r2, #0]
 129 0074 D2B2     		uxtb	r2, r2
 130 0076 42F03002 		orr	r2, r2, #48
 131 007a D2B2     		uxtb	r2, r2
 132 007c 1A70     		strb	r2, [r3, #0]
 105:.\Generated_Source\PSoC5/PWM_4.c ****                 
 106:.\Generated_Source\PSoC5/PWM_4.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 107:.\Generated_Source\PSoC5/PWM_4.c ****         PWM_4_RT1 &= ((uint8)(~PWM_4_SYNCDSI_MASK));
 133              		.loc 1 107 0
 134 007e 44F60B73 		movw	r3, #20235
 135 0082 C4F20003 		movt	r3, 16384
 136 0086 44F60B72 		movw	r2, #20235
 137 008a C4F20002 		movt	r2, 16384
 138 008e 1278     		ldrb	r2, [r2, #0]
 139 0090 D2B2     		uxtb	r2, r2
 140 0092 22F00F02 		bic	r2, r2, #15
 141 0096 D2B2     		uxtb	r2, r2
 142 0098 1A70     		strb	r2, [r3, #0]
 108:.\Generated_Source\PSoC5/PWM_4.c ****         PWM_4_RT1 |= PWM_4_SYNCDSI_EN;
 143              		.loc 1 108 0
 144 009a 44F60B73 		movw	r3, #20235
 145 009e C4F20003 		movt	r3, 16384
 146 00a2 44F60B72 		movw	r2, #20235
 147 00a6 C4F20002 		movt	r2, 16384
 148 00aa 1278     		ldrb	r2, [r2, #0]
 149 00ac D2B2     		uxtb	r2, r2
 150 00ae 42F00F02 		orr	r2, r2, #15
 151 00b2 D2B2     		uxtb	r2, r2
 152 00b4 1A70     		strb	r2, [r3, #0]
 109:.\Generated_Source\PSoC5/PWM_4.c ****        
 110:.\Generated_Source\PSoC5/PWM_4.c ****     #elif (PWM_4_UseControl)
 111:.\Generated_Source\PSoC5/PWM_4.c ****         /* Set the default compare mode defined in the parameter */
 112:.\Generated_Source\PSoC5/PWM_4.c ****         ctrl = PWM_4_CONTROL & ((uint8)(~PWM_4_CTRL_CMPMODE2_MASK)) & ((uint8)(~PWM_4_CTRL_CMPMODE1
 113:.\Generated_Source\PSoC5/PWM_4.c ****         PWM_4_CONTROL = ctrl | PWM_4_DEFAULT_COMPARE2_MODE | 
 114:.\Generated_Source\PSoC5/PWM_4.c ****                                    PWM_4_DEFAULT_COMPARE1_MODE;
 115:.\Generated_Source\PSoC5/PWM_4.c ****     #endif /* (PWM_4_UsingFixedFunction) */
 116:.\Generated_Source\PSoC5/PWM_4.c ****         
 117:.\Generated_Source\PSoC5/PWM_4.c ****     #if (!PWM_4_UsingFixedFunction)
 118:.\Generated_Source\PSoC5/PWM_4.c ****         #if (PWM_4_Resolution == 8)
 119:.\Generated_Source\PSoC5/PWM_4.c ****             /* Set FIFO 0 to 1 byte register for period*/
 120:.\Generated_Source\PSoC5/PWM_4.c ****             PWM_4_AUX_CONTROLDP0 |= (PWM_4_AUX_CTRL_FIFO0_CLR);
 121:.\Generated_Source\PSoC5/PWM_4.c ****         #else /* (PWM_4_Resolution == 16)*/
 122:.\Generated_Source\PSoC5/PWM_4.c ****             /* Set FIFO 0 to 1 byte register for period */
 123:.\Generated_Source\PSoC5/PWM_4.c ****             PWM_4_AUX_CONTROLDP0 |= (PWM_4_AUX_CTRL_FIFO0_CLR);
 124:.\Generated_Source\PSoC5/PWM_4.c ****             PWM_4_AUX_CONTROLDP1 |= (PWM_4_AUX_CTRL_FIFO0_CLR);
 125:.\Generated_Source\PSoC5/PWM_4.c ****         #endif /* (PWM_4_Resolution == 8) */
 126:.\Generated_Source\PSoC5/PWM_4.c **** 
 127:.\Generated_Source\PSoC5/PWM_4.c ****         PWM_4_WriteCounter(PWM_4_INIT_PERIOD_VALUE);
 128:.\Generated_Source\PSoC5/PWM_4.c ****     #endif /* (!PWM_4_UsingFixedFunction) */
 129:.\Generated_Source\PSoC5/PWM_4.c ****         
 130:.\Generated_Source\PSoC5/PWM_4.c ****     PWM_4_WritePeriod(PWM_4_INIT_PERIOD_VALUE);
 153              		.loc 1 130 0
 154 00b6 42F6E060 		movw	r0, #12000
 155 00ba FFF7FEFF 		bl	PWM_4_WritePeriod
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 6


 131:.\Generated_Source\PSoC5/PWM_4.c **** 
 132:.\Generated_Source\PSoC5/PWM_4.c ****         #if (PWM_4_UseOneCompareMode)
 133:.\Generated_Source\PSoC5/PWM_4.c ****             PWM_4_WriteCompare(PWM_4_INIT_COMPARE_VALUE1);
 156              		.loc 1 133 0
 157 00be 4FF05A00 		mov	r0, #90
 158 00c2 FFF7FEFF 		bl	PWM_4_WriteCompare
 134:.\Generated_Source\PSoC5/PWM_4.c ****         #else
 135:.\Generated_Source\PSoC5/PWM_4.c ****             PWM_4_WriteCompare1(PWM_4_INIT_COMPARE_VALUE1);
 136:.\Generated_Source\PSoC5/PWM_4.c ****             PWM_4_WriteCompare2(PWM_4_INIT_COMPARE_VALUE2);
 137:.\Generated_Source\PSoC5/PWM_4.c ****         #endif /* (PWM_4_UseOneCompareMode) */
 138:.\Generated_Source\PSoC5/PWM_4.c ****         
 139:.\Generated_Source\PSoC5/PWM_4.c ****         #if (PWM_4_KillModeMinTime)
 140:.\Generated_Source\PSoC5/PWM_4.c ****             PWM_4_WriteKillTime(PWM_4_MinimumKillTime);
 141:.\Generated_Source\PSoC5/PWM_4.c ****         #endif /* (PWM_4_KillModeMinTime) */
 142:.\Generated_Source\PSoC5/PWM_4.c ****         
 143:.\Generated_Source\PSoC5/PWM_4.c ****         #if (PWM_4_DeadBandUsed)
 144:.\Generated_Source\PSoC5/PWM_4.c ****             PWM_4_WriteDeadTime(PWM_4_INIT_DEAD_TIME);
 145:.\Generated_Source\PSoC5/PWM_4.c ****         #endif /* (PWM_4_DeadBandUsed) */
 146:.\Generated_Source\PSoC5/PWM_4.c **** 
 147:.\Generated_Source\PSoC5/PWM_4.c ****     #if (PWM_4_UseStatus || PWM_4_UsingFixedFunction)
 148:.\Generated_Source\PSoC5/PWM_4.c ****         PWM_4_SetInterruptMode(PWM_4_INIT_INTERRUPTS_MODE);
 159              		.loc 1 148 0
 160 00c6 4FF00000 		mov	r0, #0
 161 00ca FFF7FEFF 		bl	PWM_4_SetInterruptMode
 149:.\Generated_Source\PSoC5/PWM_4.c ****     #endif /* (PWM_4_UseStatus || PWM_4_UsingFixedFunction) */
 150:.\Generated_Source\PSoC5/PWM_4.c ****         
 151:.\Generated_Source\PSoC5/PWM_4.c ****     #if (PWM_4_UsingFixedFunction)
 152:.\Generated_Source\PSoC5/PWM_4.c ****         /* Globally Enable the Fixed Function Block chosen */
 153:.\Generated_Source\PSoC5/PWM_4.c ****         PWM_4_GLOBAL_ENABLE |= PWM_4_BLOCK_EN_MASK;
 162              		.loc 1 153 0
 163 00ce 44F2A333 		movw	r3, #17315
 164 00d2 C4F20003 		movt	r3, 16384
 165 00d6 44F2A332 		movw	r2, #17315
 166 00da C4F20002 		movt	r2, 16384
 167 00de 1278     		ldrb	r2, [r2, #0]
 168 00e0 D2B2     		uxtb	r2, r2
 169 00e2 42F00102 		orr	r2, r2, #1
 170 00e6 D2B2     		uxtb	r2, r2
 171 00e8 1A70     		strb	r2, [r3, #0]
 154:.\Generated_Source\PSoC5/PWM_4.c ****         /* Set the Interrupt source to come from the status register */
 155:.\Generated_Source\PSoC5/PWM_4.c ****         PWM_4_CONTROL2 |= PWM_4_CTRL2_IRQ_SEL;
 172              		.loc 1 155 0
 173 00ea 44F60173 		movw	r3, #20225
 174 00ee C4F20003 		movt	r3, 16384
 175 00f2 44F60172 		movw	r2, #20225
 176 00f6 C4F20002 		movt	r2, 16384
 177 00fa 1278     		ldrb	r2, [r2, #0]
 178 00fc D2B2     		uxtb	r2, r2
 179 00fe 42F00102 		orr	r2, r2, #1
 180 0102 D2B2     		uxtb	r2, r2
 181 0104 1A70     		strb	r2, [r3, #0]
 156:.\Generated_Source\PSoC5/PWM_4.c ****     #else
 157:.\Generated_Source\PSoC5/PWM_4.c ****         #if(PWM_4_UseStatus)
 158:.\Generated_Source\PSoC5/PWM_4.c ****             
 159:.\Generated_Source\PSoC5/PWM_4.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 160:.\Generated_Source\PSoC5/PWM_4.c ****             /* Enter Critical Region*/
 161:.\Generated_Source\PSoC5/PWM_4.c ****             PWM_4_interruptState = CyEnterCriticalSection();
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 7


 162:.\Generated_Source\PSoC5/PWM_4.c ****             /* Use the interrupt output of the status register for IRQ output */
 163:.\Generated_Source\PSoC5/PWM_4.c ****             PWM_4_STATUS_AUX_CTRL |= PWM_4_STATUS_ACTL_INT_EN_MASK;
 164:.\Generated_Source\PSoC5/PWM_4.c ****             
 165:.\Generated_Source\PSoC5/PWM_4.c ****              /* Exit Critical Region*/
 166:.\Generated_Source\PSoC5/PWM_4.c ****             CyExitCriticalSection(PWM_4_interruptState);
 167:.\Generated_Source\PSoC5/PWM_4.c ****             
 168:.\Generated_Source\PSoC5/PWM_4.c ****             /* Clear the FIFO to enable the PWM_4_STATUS_FIFOFULL
 169:.\Generated_Source\PSoC5/PWM_4.c ****                    bit to be set on FIFO full. */
 170:.\Generated_Source\PSoC5/PWM_4.c ****             PWM_4_ClearFIFO();
 171:.\Generated_Source\PSoC5/PWM_4.c ****         #endif /* (PWM_4_UseStatus) */
 172:.\Generated_Source\PSoC5/PWM_4.c ****     #endif /* (PWM_4_UsingFixedFunction) */
 173:.\Generated_Source\PSoC5/PWM_4.c **** }
 182              		.loc 1 173 0
 183 0106 07F10807 		add	r7, r7, #8
 184 010a BD46     		mov	sp, r7
 185 010c 80BD     		pop	{r7, pc}
 186              		.cfi_endproc
 187              	.LFE1:
 188              		.size	PWM_4_Init, .-PWM_4_Init
 189 010e 00BF     		.section	.text.PWM_4_Enable,"ax",%progbits
 190              		.align	2
 191              		.global	PWM_4_Enable
 192              		.thumb
 193              		.thumb_func
 194              		.type	PWM_4_Enable, %function
 195              	PWM_4_Enable:
 196              	.LFB2:
 174:.\Generated_Source\PSoC5/PWM_4.c **** 
 175:.\Generated_Source\PSoC5/PWM_4.c **** 
 176:.\Generated_Source\PSoC5/PWM_4.c **** /*******************************************************************************
 177:.\Generated_Source\PSoC5/PWM_4.c **** * Function Name: PWM_4_Enable
 178:.\Generated_Source\PSoC5/PWM_4.c **** ********************************************************************************
 179:.\Generated_Source\PSoC5/PWM_4.c **** *
 180:.\Generated_Source\PSoC5/PWM_4.c **** * Summary: 
 181:.\Generated_Source\PSoC5/PWM_4.c **** *  Enables the PWM block operation
 182:.\Generated_Source\PSoC5/PWM_4.c **** *
 183:.\Generated_Source\PSoC5/PWM_4.c **** * Parameters:  
 184:.\Generated_Source\PSoC5/PWM_4.c **** *  None
 185:.\Generated_Source\PSoC5/PWM_4.c **** *
 186:.\Generated_Source\PSoC5/PWM_4.c **** * Return: 
 187:.\Generated_Source\PSoC5/PWM_4.c **** *  None
 188:.\Generated_Source\PSoC5/PWM_4.c **** *
 189:.\Generated_Source\PSoC5/PWM_4.c **** * Side Effects: 
 190:.\Generated_Source\PSoC5/PWM_4.c **** *  This works only if software enable mode is chosen
 191:.\Generated_Source\PSoC5/PWM_4.c **** *
 192:.\Generated_Source\PSoC5/PWM_4.c **** *******************************************************************************/
 193:.\Generated_Source\PSoC5/PWM_4.c **** void PWM_4_Enable(void) 
 194:.\Generated_Source\PSoC5/PWM_4.c **** {
 197              		.loc 1 194 0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 1, uses_anonymous_args = 0
 201              		@ link register save eliminated.
 202 0000 80B4     		push	{r7}
 203              	.LCFI5:
 204              		.cfi_def_cfa_offset 4
 205              		.cfi_offset 7, -4
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 8


 206 0002 00AF     		add	r7, sp, #0
 207              	.LCFI6:
 208              		.cfi_def_cfa_register 7
 195:.\Generated_Source\PSoC5/PWM_4.c ****     /* Globally Enable the Fixed Function Block chosen */
 196:.\Generated_Source\PSoC5/PWM_4.c ****     #if (PWM_4_UsingFixedFunction)
 197:.\Generated_Source\PSoC5/PWM_4.c ****         PWM_4_GLOBAL_ENABLE |= PWM_4_BLOCK_EN_MASK;
 209              		.loc 1 197 0
 210 0004 44F2A333 		movw	r3, #17315
 211 0008 C4F20003 		movt	r3, 16384
 212 000c 44F2A332 		movw	r2, #17315
 213 0010 C4F20002 		movt	r2, 16384
 214 0014 1278     		ldrb	r2, [r2, #0]
 215 0016 D2B2     		uxtb	r2, r2
 216 0018 42F00102 		orr	r2, r2, #1
 217 001c D2B2     		uxtb	r2, r2
 218 001e 1A70     		strb	r2, [r3, #0]
 198:.\Generated_Source\PSoC5/PWM_4.c ****         PWM_4_GLOBAL_STBY_ENABLE |= PWM_4_BLOCK_STBY_EN_MASK;
 219              		.loc 1 198 0
 220 0020 44F2B333 		movw	r3, #17331
 221 0024 C4F20003 		movt	r3, 16384
 222 0028 44F2B332 		movw	r2, #17331
 223 002c C4F20002 		movt	r2, 16384
 224 0030 1278     		ldrb	r2, [r2, #0]
 225 0032 D2B2     		uxtb	r2, r2
 226 0034 42F00102 		orr	r2, r2, #1
 227 0038 D2B2     		uxtb	r2, r2
 228 003a 1A70     		strb	r2, [r3, #0]
 199:.\Generated_Source\PSoC5/PWM_4.c ****     #endif /* (PWM_4_UsingFixedFunction) */
 200:.\Generated_Source\PSoC5/PWM_4.c ****     
 201:.\Generated_Source\PSoC5/PWM_4.c ****     /* Enable the PWM from the control register  */
 202:.\Generated_Source\PSoC5/PWM_4.c ****     #if (PWM_4_UseControl || PWM_4_UsingFixedFunction)
 203:.\Generated_Source\PSoC5/PWM_4.c ****         PWM_4_CONTROL |= PWM_4_CTRL_ENABLE;
 229              		.loc 1 203 0
 230 003c 4FF49E43 		mov	r3, #20224
 231 0040 C4F20003 		movt	r3, 16384
 232 0044 4FF49E42 		mov	r2, #20224
 233 0048 C4F20002 		movt	r2, 16384
 234 004c 1278     		ldrb	r2, [r2, #0]
 235 004e D2B2     		uxtb	r2, r2
 236 0050 42F00102 		orr	r2, r2, #1
 237 0054 D2B2     		uxtb	r2, r2
 238 0056 1A70     		strb	r2, [r3, #0]
 204:.\Generated_Source\PSoC5/PWM_4.c ****     #endif /* (PWM_4_UseControl || PWM_4_UsingFixedFunction) */
 205:.\Generated_Source\PSoC5/PWM_4.c **** }
 239              		.loc 1 205 0
 240 0058 BD46     		mov	sp, r7
 241 005a 80BC     		pop	{r7}
 242 005c 7047     		bx	lr
 243              		.cfi_endproc
 244              	.LFE2:
 245              		.size	PWM_4_Enable, .-PWM_4_Enable
 246 005e 00BF     		.section	.text.PWM_4_Stop,"ax",%progbits
 247              		.align	2
 248              		.global	PWM_4_Stop
 249              		.thumb
 250              		.thumb_func
 251              		.type	PWM_4_Stop, %function
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 9


 252              	PWM_4_Stop:
 253              	.LFB3:
 206:.\Generated_Source\PSoC5/PWM_4.c **** 
 207:.\Generated_Source\PSoC5/PWM_4.c **** 
 208:.\Generated_Source\PSoC5/PWM_4.c **** /*******************************************************************************
 209:.\Generated_Source\PSoC5/PWM_4.c **** * Function Name: PWM_4_Stop
 210:.\Generated_Source\PSoC5/PWM_4.c **** ********************************************************************************
 211:.\Generated_Source\PSoC5/PWM_4.c **** *
 212:.\Generated_Source\PSoC5/PWM_4.c **** * Summary:
 213:.\Generated_Source\PSoC5/PWM_4.c **** *  The stop function halts the PWM, but does not change any modes or disable
 214:.\Generated_Source\PSoC5/PWM_4.c **** *  interrupts.
 215:.\Generated_Source\PSoC5/PWM_4.c **** *
 216:.\Generated_Source\PSoC5/PWM_4.c **** * Parameters:  
 217:.\Generated_Source\PSoC5/PWM_4.c **** *  None  
 218:.\Generated_Source\PSoC5/PWM_4.c **** *
 219:.\Generated_Source\PSoC5/PWM_4.c **** * Return: 
 220:.\Generated_Source\PSoC5/PWM_4.c **** *  None
 221:.\Generated_Source\PSoC5/PWM_4.c **** *
 222:.\Generated_Source\PSoC5/PWM_4.c **** * Side Effects:
 223:.\Generated_Source\PSoC5/PWM_4.c **** *  If the Enable mode is set to Hardware only then this function
 224:.\Generated_Source\PSoC5/PWM_4.c **** *  has no effect on the operation of the PWM
 225:.\Generated_Source\PSoC5/PWM_4.c **** *
 226:.\Generated_Source\PSoC5/PWM_4.c **** *******************************************************************************/
 227:.\Generated_Source\PSoC5/PWM_4.c **** void PWM_4_Stop(void) 
 228:.\Generated_Source\PSoC5/PWM_4.c **** {
 254              		.loc 1 228 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 1, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 259 0000 80B4     		push	{r7}
 260              	.LCFI7:
 261              		.cfi_def_cfa_offset 4
 262              		.cfi_offset 7, -4
 263 0002 00AF     		add	r7, sp, #0
 264              	.LCFI8:
 265              		.cfi_def_cfa_register 7
 229:.\Generated_Source\PSoC5/PWM_4.c ****     #if (PWM_4_UseControl || PWM_4_UsingFixedFunction)
 230:.\Generated_Source\PSoC5/PWM_4.c ****         PWM_4_CONTROL &= ((uint8)(~PWM_4_CTRL_ENABLE));
 266              		.loc 1 230 0
 267 0004 4FF49E43 		mov	r3, #20224
 268 0008 C4F20003 		movt	r3, 16384
 269 000c 4FF49E42 		mov	r2, #20224
 270 0010 C4F20002 		movt	r2, 16384
 271 0014 1278     		ldrb	r2, [r2, #0]
 272 0016 D2B2     		uxtb	r2, r2
 273 0018 22F00102 		bic	r2, r2, #1
 274 001c D2B2     		uxtb	r2, r2
 275 001e 1A70     		strb	r2, [r3, #0]
 231:.\Generated_Source\PSoC5/PWM_4.c ****     #endif /* (PWM_4_UseControl || PWM_4_UsingFixedFunction) */
 232:.\Generated_Source\PSoC5/PWM_4.c ****     
 233:.\Generated_Source\PSoC5/PWM_4.c ****     /* Globally disable the Fixed Function Block chosen */
 234:.\Generated_Source\PSoC5/PWM_4.c ****     #if (PWM_4_UsingFixedFunction)
 235:.\Generated_Source\PSoC5/PWM_4.c ****         PWM_4_GLOBAL_ENABLE &= ((uint8)(~PWM_4_BLOCK_EN_MASK));
 276              		.loc 1 235 0
 277 0020 44F2A333 		movw	r3, #17315
 278 0024 C4F20003 		movt	r3, 16384
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 10


 279 0028 44F2A332 		movw	r2, #17315
 280 002c C4F20002 		movt	r2, 16384
 281 0030 1278     		ldrb	r2, [r2, #0]
 282 0032 D2B2     		uxtb	r2, r2
 283 0034 22F00102 		bic	r2, r2, #1
 284 0038 D2B2     		uxtb	r2, r2
 285 003a 1A70     		strb	r2, [r3, #0]
 236:.\Generated_Source\PSoC5/PWM_4.c ****         PWM_4_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_4_BLOCK_STBY_EN_MASK));
 286              		.loc 1 236 0
 287 003c 44F2B333 		movw	r3, #17331
 288 0040 C4F20003 		movt	r3, 16384
 289 0044 44F2B332 		movw	r2, #17331
 290 0048 C4F20002 		movt	r2, 16384
 291 004c 1278     		ldrb	r2, [r2, #0]
 292 004e D2B2     		uxtb	r2, r2
 293 0050 22F00102 		bic	r2, r2, #1
 294 0054 D2B2     		uxtb	r2, r2
 295 0056 1A70     		strb	r2, [r3, #0]
 237:.\Generated_Source\PSoC5/PWM_4.c ****     #endif /* (PWM_4_UsingFixedFunction) */
 238:.\Generated_Source\PSoC5/PWM_4.c **** }
 296              		.loc 1 238 0
 297 0058 BD46     		mov	sp, r7
 298 005a 80BC     		pop	{r7}
 299 005c 7047     		bx	lr
 300              		.cfi_endproc
 301              	.LFE3:
 302              		.size	PWM_4_Stop, .-PWM_4_Stop
 303 005e 00BF     		.section	.text.PWM_4_WritePeriod,"ax",%progbits
 304              		.align	2
 305              		.global	PWM_4_WritePeriod
 306              		.thumb
 307              		.thumb_func
 308              		.type	PWM_4_WritePeriod, %function
 309              	PWM_4_WritePeriod:
 310              	.LFB4:
 239:.\Generated_Source\PSoC5/PWM_4.c **** 
 240:.\Generated_Source\PSoC5/PWM_4.c **** 
 241:.\Generated_Source\PSoC5/PWM_4.c **** #if (PWM_4_UseOneCompareMode)
 242:.\Generated_Source\PSoC5/PWM_4.c **** 	#if (PWM_4_CompareMode1SW)
 243:.\Generated_Source\PSoC5/PWM_4.c **** 
 244:.\Generated_Source\PSoC5/PWM_4.c **** 
 245:.\Generated_Source\PSoC5/PWM_4.c **** 		/*******************************************************************************
 246:.\Generated_Source\PSoC5/PWM_4.c **** 		* Function Name: PWM_4_SetCompareMode
 247:.\Generated_Source\PSoC5/PWM_4.c **** 		********************************************************************************
 248:.\Generated_Source\PSoC5/PWM_4.c **** 		* 
 249:.\Generated_Source\PSoC5/PWM_4.c **** 		* Summary:
 250:.\Generated_Source\PSoC5/PWM_4.c **** 		*  This function writes the Compare Mode for the pwm output when in Dither mode,
 251:.\Generated_Source\PSoC5/PWM_4.c **** 		*  Center Align Mode or One Output Mode.
 252:.\Generated_Source\PSoC5/PWM_4.c **** 		*
 253:.\Generated_Source\PSoC5/PWM_4.c **** 		* Parameters:
 254:.\Generated_Source\PSoC5/PWM_4.c **** 		*  comparemode:  The new compare mode for the PWM output. Use the compare types
 255:.\Generated_Source\PSoC5/PWM_4.c **** 		*                defined in the H file as input arguments.
 256:.\Generated_Source\PSoC5/PWM_4.c **** 		*
 257:.\Generated_Source\PSoC5/PWM_4.c **** 		* Return:
 258:.\Generated_Source\PSoC5/PWM_4.c **** 		*  None
 259:.\Generated_Source\PSoC5/PWM_4.c **** 		*
 260:.\Generated_Source\PSoC5/PWM_4.c **** 		*******************************************************************************/
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 11


 261:.\Generated_Source\PSoC5/PWM_4.c **** 		void PWM_4_SetCompareMode(uint8 comparemode) 
 262:.\Generated_Source\PSoC5/PWM_4.c **** 		{
 263:.\Generated_Source\PSoC5/PWM_4.c **** 		    #if(PWM_4_UsingFixedFunction)
 264:.\Generated_Source\PSoC5/PWM_4.c ****             
 265:.\Generated_Source\PSoC5/PWM_4.c ****                 #if(0 != PWM_4_CTRL_CMPMODE1_SHIFT)
 266:.\Generated_Source\PSoC5/PWM_4.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_4_CTRL_CMPMODE1_SH
 267:.\Generated_Source\PSoC5/PWM_4.c ****                 #else
 268:.\Generated_Source\PSoC5/PWM_4.c ****                     uint8 comparemodemasked = comparemode;
 269:.\Generated_Source\PSoC5/PWM_4.c ****                 #endif /* (0 != PWM_4_CTRL_CMPMODE1_SHIFT) */
 270:.\Generated_Source\PSoC5/PWM_4.c ****             
 271:.\Generated_Source\PSoC5/PWM_4.c **** 	            PWM_4_CONTROL3 &= ((uint8)(~PWM_4_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 272:.\Generated_Source\PSoC5/PWM_4.c **** 	            PWM_4_CONTROL3 |= comparemodemasked;     
 273:.\Generated_Source\PSoC5/PWM_4.c **** 		                
 274:.\Generated_Source\PSoC5/PWM_4.c **** 		    #elif (PWM_4_UseControl)
 275:.\Generated_Source\PSoC5/PWM_4.c **** 		        
 276:.\Generated_Source\PSoC5/PWM_4.c ****                 #if(0 != PWM_4_CTRL_CMPMODE1_SHIFT)
 277:.\Generated_Source\PSoC5/PWM_4.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_4_CTRL_CMPMODE1_S
 278:.\Generated_Source\PSoC5/PWM_4.c ****     		                                    PWM_4_CTRL_CMPMODE1_MASK;
 279:.\Generated_Source\PSoC5/PWM_4.c ****                 #else
 280:.\Generated_Source\PSoC5/PWM_4.c ****                     uint8 comparemode1masked = comparemode & PWM_4_CTRL_CMPMODE1_MASK;             
 281:.\Generated_Source\PSoC5/PWM_4.c ****                 #endif /* (0 != PWM_4_CTRL_CMPMODE1_SHIFT) */
 282:.\Generated_Source\PSoC5/PWM_4.c ****                 
 283:.\Generated_Source\PSoC5/PWM_4.c ****                 #if(0 != PWM_4_CTRL_CMPMODE2_SHIFT)                            
 284:.\Generated_Source\PSoC5/PWM_4.c ****     		        uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_4_CTRL_CMPMODE2_SHIFT))
 285:.\Generated_Source\PSoC5/PWM_4.c ****     		                                   PWM_4_CTRL_CMPMODE2_MASK;
 286:.\Generated_Source\PSoC5/PWM_4.c ****                 #else
 287:.\Generated_Source\PSoC5/PWM_4.c ****     		        uint8 comparemode2masked = comparemode & PWM_4_CTRL_CMPMODE2_MASK;                
 288:.\Generated_Source\PSoC5/PWM_4.c ****                 #endif /* (0 != PWM_4_CTRL_CMPMODE2_SHIFT) */
 289:.\Generated_Source\PSoC5/PWM_4.c ****                 
 290:.\Generated_Source\PSoC5/PWM_4.c **** 		        /*Clear existing mode */
 291:.\Generated_Source\PSoC5/PWM_4.c **** 		        PWM_4_CONTROL &= ((uint8)(~(PWM_4_CTRL_CMPMODE1_MASK | PWM_4_CTRL_CMPMODE2_MASK))); 
 292:.\Generated_Source\PSoC5/PWM_4.c **** 		        PWM_4_CONTROL |= (comparemode1masked | comparemode2masked);
 293:.\Generated_Source\PSoC5/PWM_4.c **** 		        
 294:.\Generated_Source\PSoC5/PWM_4.c **** 		    #else
 295:.\Generated_Source\PSoC5/PWM_4.c **** 		        uint8 temp = comparemode;
 296:.\Generated_Source\PSoC5/PWM_4.c **** 		    #endif /* (PWM_4_UsingFixedFunction) */
 297:.\Generated_Source\PSoC5/PWM_4.c **** 		}
 298:.\Generated_Source\PSoC5/PWM_4.c **** 	#endif /* PWM_4_CompareMode1SW */
 299:.\Generated_Source\PSoC5/PWM_4.c **** 
 300:.\Generated_Source\PSoC5/PWM_4.c **** #else /* UseOneCompareMode */
 301:.\Generated_Source\PSoC5/PWM_4.c **** 
 302:.\Generated_Source\PSoC5/PWM_4.c **** 	#if (PWM_4_CompareMode1SW)
 303:.\Generated_Source\PSoC5/PWM_4.c **** 
 304:.\Generated_Source\PSoC5/PWM_4.c **** 
 305:.\Generated_Source\PSoC5/PWM_4.c **** 		/*******************************************************************************
 306:.\Generated_Source\PSoC5/PWM_4.c **** 		* Function Name: PWM_4_SetCompareMode1
 307:.\Generated_Source\PSoC5/PWM_4.c **** 		********************************************************************************
 308:.\Generated_Source\PSoC5/PWM_4.c **** 		* 
 309:.\Generated_Source\PSoC5/PWM_4.c **** 		* Summary:
 310:.\Generated_Source\PSoC5/PWM_4.c **** 		*  This function writes the Compare Mode for the pwm or pwm1 output
 311:.\Generated_Source\PSoC5/PWM_4.c **** 		*
 312:.\Generated_Source\PSoC5/PWM_4.c **** 		* Parameters:  
 313:.\Generated_Source\PSoC5/PWM_4.c **** 		*  comparemode:  The new compare mode for the PWM output. Use the compare types
 314:.\Generated_Source\PSoC5/PWM_4.c **** 		*                defined in the H file as input arguments.
 315:.\Generated_Source\PSoC5/PWM_4.c **** 		*
 316:.\Generated_Source\PSoC5/PWM_4.c **** 		* Return: 
 317:.\Generated_Source\PSoC5/PWM_4.c **** 		*  None
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 12


 318:.\Generated_Source\PSoC5/PWM_4.c **** 		*
 319:.\Generated_Source\PSoC5/PWM_4.c **** 		*******************************************************************************/
 320:.\Generated_Source\PSoC5/PWM_4.c **** 		void PWM_4_SetCompareMode1(uint8 comparemode) 
 321:.\Generated_Source\PSoC5/PWM_4.c **** 		{
 322:.\Generated_Source\PSoC5/PWM_4.c **** 		    #if(0 != PWM_4_CTRL_CMPMODE1_SHIFT)
 323:.\Generated_Source\PSoC5/PWM_4.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_4_CTRL_CMPMODE1_SHIFT)
 324:.\Generated_Source\PSoC5/PWM_4.c ****     		                               PWM_4_CTRL_CMPMODE1_MASK;
 325:.\Generated_Source\PSoC5/PWM_4.c **** 		    #else
 326:.\Generated_Source\PSoC5/PWM_4.c ****                 uint8 comparemodemasked = comparemode & PWM_4_CTRL_CMPMODE1_MASK;                
 327:.\Generated_Source\PSoC5/PWM_4.c ****             #endif /* (0 != PWM_4_CTRL_CMPMODE1_SHIFT) */
 328:.\Generated_Source\PSoC5/PWM_4.c ****                    
 329:.\Generated_Source\PSoC5/PWM_4.c **** 		    #if (PWM_4_UseControl)
 330:.\Generated_Source\PSoC5/PWM_4.c **** 		        PWM_4_CONTROL &= ((uint8)(~PWM_4_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 331:.\Generated_Source\PSoC5/PWM_4.c **** 		        PWM_4_CONTROL |= comparemodemasked;
 332:.\Generated_Source\PSoC5/PWM_4.c **** 		    #endif /* (PWM_4_UseControl) */
 333:.\Generated_Source\PSoC5/PWM_4.c **** 		}
 334:.\Generated_Source\PSoC5/PWM_4.c **** 	#endif /* PWM_4_CompareMode1SW */
 335:.\Generated_Source\PSoC5/PWM_4.c **** 
 336:.\Generated_Source\PSoC5/PWM_4.c **** #if (PWM_4_CompareMode2SW)
 337:.\Generated_Source\PSoC5/PWM_4.c **** 
 338:.\Generated_Source\PSoC5/PWM_4.c **** 
 339:.\Generated_Source\PSoC5/PWM_4.c ****     /*******************************************************************************
 340:.\Generated_Source\PSoC5/PWM_4.c ****     * Function Name: PWM_4_SetCompareMode2
 341:.\Generated_Source\PSoC5/PWM_4.c ****     ********************************************************************************
 342:.\Generated_Source\PSoC5/PWM_4.c ****     * 
 343:.\Generated_Source\PSoC5/PWM_4.c ****     * Summary:
 344:.\Generated_Source\PSoC5/PWM_4.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 345:.\Generated_Source\PSoC5/PWM_4.c ****     *
 346:.\Generated_Source\PSoC5/PWM_4.c ****     * Parameters:  
 347:.\Generated_Source\PSoC5/PWM_4.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 348:.\Generated_Source\PSoC5/PWM_4.c ****     *                defined in the H file as input arguments.
 349:.\Generated_Source\PSoC5/PWM_4.c ****     *
 350:.\Generated_Source\PSoC5/PWM_4.c ****     * Return: 
 351:.\Generated_Source\PSoC5/PWM_4.c ****     *  None
 352:.\Generated_Source\PSoC5/PWM_4.c ****     *
 353:.\Generated_Source\PSoC5/PWM_4.c ****     *******************************************************************************/
 354:.\Generated_Source\PSoC5/PWM_4.c ****     void PWM_4_SetCompareMode2(uint8 comparemode) 
 355:.\Generated_Source\PSoC5/PWM_4.c ****     {
 356:.\Generated_Source\PSoC5/PWM_4.c **** 
 357:.\Generated_Source\PSoC5/PWM_4.c ****         #if(0 != PWM_4_CTRL_CMPMODE2_SHIFT)
 358:.\Generated_Source\PSoC5/PWM_4.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_4_CTRL_CMPMODE2_SHIFT)) & 
 359:.\Generated_Source\PSoC5/PWM_4.c ****                                                  PWM_4_CTRL_CMPMODE2_MASK;
 360:.\Generated_Source\PSoC5/PWM_4.c ****         #else
 361:.\Generated_Source\PSoC5/PWM_4.c ****             uint8 comparemodemasked = comparemode & PWM_4_CTRL_CMPMODE2_MASK;            
 362:.\Generated_Source\PSoC5/PWM_4.c ****         #endif /* (0 != PWM_4_CTRL_CMPMODE2_SHIFT) */
 363:.\Generated_Source\PSoC5/PWM_4.c ****         
 364:.\Generated_Source\PSoC5/PWM_4.c ****         #if (PWM_4_UseControl)
 365:.\Generated_Source\PSoC5/PWM_4.c ****             PWM_4_CONTROL &= ((uint8)(~PWM_4_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 366:.\Generated_Source\PSoC5/PWM_4.c ****             PWM_4_CONTROL |= comparemodemasked;
 367:.\Generated_Source\PSoC5/PWM_4.c ****         #endif /* (PWM_4_UseControl) */
 368:.\Generated_Source\PSoC5/PWM_4.c ****     }
 369:.\Generated_Source\PSoC5/PWM_4.c ****     #endif /*PWM_4_CompareMode2SW */
 370:.\Generated_Source\PSoC5/PWM_4.c **** 
 371:.\Generated_Source\PSoC5/PWM_4.c **** #endif /* UseOneCompareMode */
 372:.\Generated_Source\PSoC5/PWM_4.c **** 
 373:.\Generated_Source\PSoC5/PWM_4.c **** 
 374:.\Generated_Source\PSoC5/PWM_4.c **** #if (!PWM_4_UsingFixedFunction)
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 13


 375:.\Generated_Source\PSoC5/PWM_4.c **** 
 376:.\Generated_Source\PSoC5/PWM_4.c **** 
 377:.\Generated_Source\PSoC5/PWM_4.c ****     /*******************************************************************************
 378:.\Generated_Source\PSoC5/PWM_4.c ****     * Function Name: PWM_4_WriteCounter
 379:.\Generated_Source\PSoC5/PWM_4.c ****     ********************************************************************************
 380:.\Generated_Source\PSoC5/PWM_4.c ****     * 
 381:.\Generated_Source\PSoC5/PWM_4.c ****     * Summary:
 382:.\Generated_Source\PSoC5/PWM_4.c ****     *  Writes a new counter value directly to the counter register. This will be 
 383:.\Generated_Source\PSoC5/PWM_4.c ****     *  implemented for that currently running period and only that period. This API 
 384:.\Generated_Source\PSoC5/PWM_4.c ****     *  is valid only for UDB implementation and not available for fixed function 
 385:.\Generated_Source\PSoC5/PWM_4.c ****     *  PWM implementation.    
 386:.\Generated_Source\PSoC5/PWM_4.c ****     *
 387:.\Generated_Source\PSoC5/PWM_4.c ****     * Parameters:  
 388:.\Generated_Source\PSoC5/PWM_4.c ****     *  counter:  The period new period counter value.
 389:.\Generated_Source\PSoC5/PWM_4.c ****     *
 390:.\Generated_Source\PSoC5/PWM_4.c ****     * Return: 
 391:.\Generated_Source\PSoC5/PWM_4.c ****     *  None
 392:.\Generated_Source\PSoC5/PWM_4.c ****     *
 393:.\Generated_Source\PSoC5/PWM_4.c ****     * Side Effects: 
 394:.\Generated_Source\PSoC5/PWM_4.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 395:.\Generated_Source\PSoC5/PWM_4.c ****     *
 396:.\Generated_Source\PSoC5/PWM_4.c ****     *******************************************************************************/
 397:.\Generated_Source\PSoC5/PWM_4.c ****     void PWM_4_WriteCounter(uint16 counter) \
 398:.\Generated_Source\PSoC5/PWM_4.c ****                                        
 399:.\Generated_Source\PSoC5/PWM_4.c ****     {
 400:.\Generated_Source\PSoC5/PWM_4.c ****         CY_SET_REG16(PWM_4_COUNTER_LSB_PTR, counter);
 401:.\Generated_Source\PSoC5/PWM_4.c ****     }
 402:.\Generated_Source\PSoC5/PWM_4.c **** 
 403:.\Generated_Source\PSoC5/PWM_4.c **** 
 404:.\Generated_Source\PSoC5/PWM_4.c ****     /*******************************************************************************
 405:.\Generated_Source\PSoC5/PWM_4.c ****     * Function Name: PWM_4_ReadCounter
 406:.\Generated_Source\PSoC5/PWM_4.c ****     ********************************************************************************
 407:.\Generated_Source\PSoC5/PWM_4.c ****     * 
 408:.\Generated_Source\PSoC5/PWM_4.c ****     * Summary:
 409:.\Generated_Source\PSoC5/PWM_4.c ****     *  This function returns the current value of the counter.  It doesn't matter
 410:.\Generated_Source\PSoC5/PWM_4.c ****     *  if the counter is enabled or running.
 411:.\Generated_Source\PSoC5/PWM_4.c ****     *
 412:.\Generated_Source\PSoC5/PWM_4.c ****     * Parameters:  
 413:.\Generated_Source\PSoC5/PWM_4.c ****     *  None  
 414:.\Generated_Source\PSoC5/PWM_4.c ****     *
 415:.\Generated_Source\PSoC5/PWM_4.c ****     * Return: 
 416:.\Generated_Source\PSoC5/PWM_4.c ****     *  The current value of the counter.
 417:.\Generated_Source\PSoC5/PWM_4.c ****     *
 418:.\Generated_Source\PSoC5/PWM_4.c ****     *******************************************************************************/
 419:.\Generated_Source\PSoC5/PWM_4.c ****     uint16 PWM_4_ReadCounter(void) 
 420:.\Generated_Source\PSoC5/PWM_4.c ****     {
 421:.\Generated_Source\PSoC5/PWM_4.c ****         /* Force capture by reading Accumulator */
 422:.\Generated_Source\PSoC5/PWM_4.c ****         /* Must first do a software capture to be able to read the counter */
 423:.\Generated_Source\PSoC5/PWM_4.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 424:.\Generated_Source\PSoC5/PWM_4.c ****         (void)PWM_4_COUNTERCAP_LSB;
 425:.\Generated_Source\PSoC5/PWM_4.c ****         
 426:.\Generated_Source\PSoC5/PWM_4.c ****         /* Read the data from the FIFO (or capture register for Fixed Function)*/
 427:.\Generated_Source\PSoC5/PWM_4.c ****         return (CY_GET_REG16(PWM_4_CAPTURE_LSB_PTR));
 428:.\Generated_Source\PSoC5/PWM_4.c ****     }
 429:.\Generated_Source\PSoC5/PWM_4.c **** 
 430:.\Generated_Source\PSoC5/PWM_4.c ****         #if (PWM_4_UseStatus)
 431:.\Generated_Source\PSoC5/PWM_4.c **** 
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 14


 432:.\Generated_Source\PSoC5/PWM_4.c **** 
 433:.\Generated_Source\PSoC5/PWM_4.c ****             /*******************************************************************************
 434:.\Generated_Source\PSoC5/PWM_4.c ****             * Function Name: PWM_4_ClearFIFO
 435:.\Generated_Source\PSoC5/PWM_4.c ****             ********************************************************************************
 436:.\Generated_Source\PSoC5/PWM_4.c ****             * 
 437:.\Generated_Source\PSoC5/PWM_4.c ****             * Summary:
 438:.\Generated_Source\PSoC5/PWM_4.c ****             *  This function clears all capture data from the capture FIFO
 439:.\Generated_Source\PSoC5/PWM_4.c ****             *
 440:.\Generated_Source\PSoC5/PWM_4.c ****             * Parameters:  
 441:.\Generated_Source\PSoC5/PWM_4.c ****             *  None
 442:.\Generated_Source\PSoC5/PWM_4.c ****             *
 443:.\Generated_Source\PSoC5/PWM_4.c ****             * Return: 
 444:.\Generated_Source\PSoC5/PWM_4.c ****             *  None
 445:.\Generated_Source\PSoC5/PWM_4.c ****             *
 446:.\Generated_Source\PSoC5/PWM_4.c ****             *******************************************************************************/
 447:.\Generated_Source\PSoC5/PWM_4.c ****             void PWM_4_ClearFIFO(void) 
 448:.\Generated_Source\PSoC5/PWM_4.c ****             {
 449:.\Generated_Source\PSoC5/PWM_4.c ****                 while(0u != (PWM_4_ReadStatusRegister() & PWM_4_STATUS_FIFONEMPTY))
 450:.\Generated_Source\PSoC5/PWM_4.c ****                 {
 451:.\Generated_Source\PSoC5/PWM_4.c ****                     (void)PWM_4_ReadCapture();
 452:.\Generated_Source\PSoC5/PWM_4.c ****                 }
 453:.\Generated_Source\PSoC5/PWM_4.c ****             }
 454:.\Generated_Source\PSoC5/PWM_4.c **** 
 455:.\Generated_Source\PSoC5/PWM_4.c ****         #endif /* PWM_4_UseStatus */
 456:.\Generated_Source\PSoC5/PWM_4.c **** 
 457:.\Generated_Source\PSoC5/PWM_4.c **** #endif /* !PWM_4_UsingFixedFunction */
 458:.\Generated_Source\PSoC5/PWM_4.c **** 
 459:.\Generated_Source\PSoC5/PWM_4.c **** 
 460:.\Generated_Source\PSoC5/PWM_4.c **** /*******************************************************************************
 461:.\Generated_Source\PSoC5/PWM_4.c **** * Function Name: PWM_4_WritePeriod
 462:.\Generated_Source\PSoC5/PWM_4.c **** ********************************************************************************
 463:.\Generated_Source\PSoC5/PWM_4.c **** * 
 464:.\Generated_Source\PSoC5/PWM_4.c **** * Summary:
 465:.\Generated_Source\PSoC5/PWM_4.c **** *  This function is used to change the period of the counter.  The new period 
 466:.\Generated_Source\PSoC5/PWM_4.c **** *  will be loaded the next time terminal count is detected.
 467:.\Generated_Source\PSoC5/PWM_4.c **** *
 468:.\Generated_Source\PSoC5/PWM_4.c **** * Parameters:  
 469:.\Generated_Source\PSoC5/PWM_4.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0 
 470:.\Generated_Source\PSoC5/PWM_4.c **** *           will result in the counter remaining at zero.
 471:.\Generated_Source\PSoC5/PWM_4.c **** *
 472:.\Generated_Source\PSoC5/PWM_4.c **** * Return: 
 473:.\Generated_Source\PSoC5/PWM_4.c **** *  None
 474:.\Generated_Source\PSoC5/PWM_4.c **** *
 475:.\Generated_Source\PSoC5/PWM_4.c **** *******************************************************************************/
 476:.\Generated_Source\PSoC5/PWM_4.c **** void PWM_4_WritePeriod(uint16 period) 
 477:.\Generated_Source\PSoC5/PWM_4.c **** {
 311              		.loc 1 477 0
 312              		.cfi_startproc
 313              		@ args = 0, pretend = 0, frame = 8
 314              		@ frame_needed = 1, uses_anonymous_args = 0
 315              		@ link register save eliminated.
 316 0000 80B4     		push	{r7}
 317              	.LCFI9:
 318              		.cfi_def_cfa_offset 4
 319              		.cfi_offset 7, -4
 320 0002 83B0     		sub	sp, sp, #12
 321              	.LCFI10:
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 15


 322              		.cfi_def_cfa_offset 16
 323 0004 00AF     		add	r7, sp, #0
 324              	.LCFI11:
 325              		.cfi_def_cfa_register 7
 326 0006 0346     		mov	r3, r0
 327 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 478:.\Generated_Source\PSoC5/PWM_4.c ****     #if(PWM_4_UsingFixedFunction)
 479:.\Generated_Source\PSoC5/PWM_4.c ****         CY_SET_REG16(PWM_4_PERIOD_LSB_PTR, (uint16)period);
 328              		.loc 1 479 0
 329 000a 44F60473 		movw	r3, #20228
 330 000e C4F20003 		movt	r3, 16384
 331 0012 FA88     		ldrh	r2, [r7, #6]	@ movhi
 332 0014 1A80     		strh	r2, [r3, #0]	@ movhi
 480:.\Generated_Source\PSoC5/PWM_4.c ****     #else
 481:.\Generated_Source\PSoC5/PWM_4.c ****         CY_SET_REG16(PWM_4_PERIOD_LSB_PTR, period);
 482:.\Generated_Source\PSoC5/PWM_4.c ****     #endif /* (PWM_4_UsingFixedFunction) */
 483:.\Generated_Source\PSoC5/PWM_4.c **** }
 333              		.loc 1 483 0
 334 0016 07F10C07 		add	r7, r7, #12
 335 001a BD46     		mov	sp, r7
 336 001c 80BC     		pop	{r7}
 337 001e 7047     		bx	lr
 338              		.cfi_endproc
 339              	.LFE4:
 340              		.size	PWM_4_WritePeriod, .-PWM_4_WritePeriod
 341              		.section	.text.PWM_4_WriteCompare,"ax",%progbits
 342              		.align	2
 343              		.global	PWM_4_WriteCompare
 344              		.thumb
 345              		.thumb_func
 346              		.type	PWM_4_WriteCompare, %function
 347              	PWM_4_WriteCompare:
 348              	.LFB5:
 484:.\Generated_Source\PSoC5/PWM_4.c **** 
 485:.\Generated_Source\PSoC5/PWM_4.c **** #if (PWM_4_UseOneCompareMode)
 486:.\Generated_Source\PSoC5/PWM_4.c **** 
 487:.\Generated_Source\PSoC5/PWM_4.c **** 
 488:.\Generated_Source\PSoC5/PWM_4.c ****     /*******************************************************************************
 489:.\Generated_Source\PSoC5/PWM_4.c ****     * Function Name: PWM_4_WriteCompare
 490:.\Generated_Source\PSoC5/PWM_4.c ****     ********************************************************************************
 491:.\Generated_Source\PSoC5/PWM_4.c ****     * 
 492:.\Generated_Source\PSoC5/PWM_4.c ****     * Summary:
 493:.\Generated_Source\PSoC5/PWM_4.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 494:.\Generated_Source\PSoC5/PWM_4.c ****     *  mode. The compare output will reflect the new value on the next UDB clock. 
 495:.\Generated_Source\PSoC5/PWM_4.c ****     *  The compare output will be driven high when the present counter value is 
 496:.\Generated_Source\PSoC5/PWM_4.c ****     *  compared to the compare value based on the compare mode defined in 
 497:.\Generated_Source\PSoC5/PWM_4.c ****     *  Dither Mode.
 498:.\Generated_Source\PSoC5/PWM_4.c ****     *
 499:.\Generated_Source\PSoC5/PWM_4.c ****     * Parameters:  
 500:.\Generated_Source\PSoC5/PWM_4.c ****     *  compare:  New compare value.  
 501:.\Generated_Source\PSoC5/PWM_4.c ****     *
 502:.\Generated_Source\PSoC5/PWM_4.c ****     * Return: 
 503:.\Generated_Source\PSoC5/PWM_4.c ****     *  None
 504:.\Generated_Source\PSoC5/PWM_4.c ****     *
 505:.\Generated_Source\PSoC5/PWM_4.c ****     * Side Effects:
 506:.\Generated_Source\PSoC5/PWM_4.c ****     *  This function is only available if the PWM mode parameter is set to
 507:.\Generated_Source\PSoC5/PWM_4.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 16


 508:.\Generated_Source\PSoC5/PWM_4.c ****     *
 509:.\Generated_Source\PSoC5/PWM_4.c ****     *******************************************************************************/
 510:.\Generated_Source\PSoC5/PWM_4.c ****     void PWM_4_WriteCompare(uint16 compare) \
 511:.\Generated_Source\PSoC5/PWM_4.c ****                                        
 512:.\Generated_Source\PSoC5/PWM_4.c ****     {	
 349              		.loc 1 512 0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 8
 352              		@ frame_needed = 1, uses_anonymous_args = 0
 353              		@ link register save eliminated.
 354 0000 80B4     		push	{r7}
 355              	.LCFI12:
 356              		.cfi_def_cfa_offset 4
 357              		.cfi_offset 7, -4
 358 0002 83B0     		sub	sp, sp, #12
 359              	.LCFI13:
 360              		.cfi_def_cfa_offset 16
 361 0004 00AF     		add	r7, sp, #0
 362              	.LCFI14:
 363              		.cfi_def_cfa_register 7
 364 0006 0346     		mov	r3, r0
 365 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 513:.\Generated_Source\PSoC5/PWM_4.c **** 		#if(PWM_4_UsingFixedFunction)
 514:.\Generated_Source\PSoC5/PWM_4.c **** 			CY_SET_REG16(PWM_4_COMPARE1_LSB_PTR, (uint16)compare);
 366              		.loc 1 514 0
 367 000a 44F60673 		movw	r3, #20230
 368 000e C4F20003 		movt	r3, 16384
 369 0012 FA88     		ldrh	r2, [r7, #6]	@ movhi
 370 0014 1A80     		strh	r2, [r3, #0]	@ movhi
 515:.\Generated_Source\PSoC5/PWM_4.c **** 		#else
 516:.\Generated_Source\PSoC5/PWM_4.c **** 	        CY_SET_REG16(PWM_4_COMPARE1_LSB_PTR, compare);	
 517:.\Generated_Source\PSoC5/PWM_4.c **** 		#endif /* (PWM_4_UsingFixedFunction) */
 518:.\Generated_Source\PSoC5/PWM_4.c ****         
 519:.\Generated_Source\PSoC5/PWM_4.c ****         #if (PWM_4_PWMMode == PWM_4__B_PWM__DITHER)
 520:.\Generated_Source\PSoC5/PWM_4.c ****             #if(PWM_4_UsingFixedFunction)
 521:.\Generated_Source\PSoC5/PWM_4.c ****     			CY_SET_REG16(PWM_4_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 522:.\Generated_Source\PSoC5/PWM_4.c ****     		#else
 523:.\Generated_Source\PSoC5/PWM_4.c ****     	        CY_SET_REG16(PWM_4_COMPARE2_LSB_PTR, (compare + 1u));	
 524:.\Generated_Source\PSoC5/PWM_4.c ****     		#endif /* (PWM_4_UsingFixedFunction) */
 525:.\Generated_Source\PSoC5/PWM_4.c ****         #endif /* (PWM_4_PWMMode == PWM_4__B_PWM__DITHER) */
 526:.\Generated_Source\PSoC5/PWM_4.c ****     }
 371              		.loc 1 526 0
 372 0016 07F10C07 		add	r7, r7, #12
 373 001a BD46     		mov	sp, r7
 374 001c 80BC     		pop	{r7}
 375 001e 7047     		bx	lr
 376              		.cfi_endproc
 377              	.LFE5:
 378              		.size	PWM_4_WriteCompare, .-PWM_4_WriteCompare
 379              		.section	.text.PWM_4_SetInterruptMode,"ax",%progbits
 380              		.align	2
 381              		.global	PWM_4_SetInterruptMode
 382              		.thumb
 383              		.thumb_func
 384              		.type	PWM_4_SetInterruptMode, %function
 385              	PWM_4_SetInterruptMode:
 386              	.LFB6:
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 17


 527:.\Generated_Source\PSoC5/PWM_4.c **** 
 528:.\Generated_Source\PSoC5/PWM_4.c **** 
 529:.\Generated_Source\PSoC5/PWM_4.c **** #else
 530:.\Generated_Source\PSoC5/PWM_4.c **** 
 531:.\Generated_Source\PSoC5/PWM_4.c **** 
 532:.\Generated_Source\PSoC5/PWM_4.c ****     /*******************************************************************************
 533:.\Generated_Source\PSoC5/PWM_4.c ****     * Function Name: PWM_4_WriteCompare1
 534:.\Generated_Source\PSoC5/PWM_4.c ****     ********************************************************************************
 535:.\Generated_Source\PSoC5/PWM_4.c ****     * 
 536:.\Generated_Source\PSoC5/PWM_4.c ****     * Summary:
 537:.\Generated_Source\PSoC5/PWM_4.c ****     *  This funtion is used to change the compare1 value.  The compare output will 
 538:.\Generated_Source\PSoC5/PWM_4.c ****     *  reflect the new value on the next UDB clock.  The compare output will be 
 539:.\Generated_Source\PSoC5/PWM_4.c ****     *  driven high when the present counter value is less than or less than or 
 540:.\Generated_Source\PSoC5/PWM_4.c ****     *  equal to the compare register, depending on the mode.
 541:.\Generated_Source\PSoC5/PWM_4.c ****     *
 542:.\Generated_Source\PSoC5/PWM_4.c ****     * Parameters:  
 543:.\Generated_Source\PSoC5/PWM_4.c ****     *  compare:  New compare value.  
 544:.\Generated_Source\PSoC5/PWM_4.c ****     *
 545:.\Generated_Source\PSoC5/PWM_4.c ****     * Return: 
 546:.\Generated_Source\PSoC5/PWM_4.c ****     *  None
 547:.\Generated_Source\PSoC5/PWM_4.c ****     *
 548:.\Generated_Source\PSoC5/PWM_4.c ****     *******************************************************************************/
 549:.\Generated_Source\PSoC5/PWM_4.c ****     void PWM_4_WriteCompare1(uint16 compare) \
 550:.\Generated_Source\PSoC5/PWM_4.c ****                                         
 551:.\Generated_Source\PSoC5/PWM_4.c ****     {
 552:.\Generated_Source\PSoC5/PWM_4.c ****         #if(PWM_4_UsingFixedFunction)
 553:.\Generated_Source\PSoC5/PWM_4.c ****             CY_SET_REG16(PWM_4_COMPARE1_LSB_PTR, (uint16)compare);
 554:.\Generated_Source\PSoC5/PWM_4.c ****         #else
 555:.\Generated_Source\PSoC5/PWM_4.c ****             CY_SET_REG16(PWM_4_COMPARE1_LSB_PTR, compare);
 556:.\Generated_Source\PSoC5/PWM_4.c ****         #endif /* (PWM_4_UsingFixedFunction) */
 557:.\Generated_Source\PSoC5/PWM_4.c ****     }
 558:.\Generated_Source\PSoC5/PWM_4.c **** 
 559:.\Generated_Source\PSoC5/PWM_4.c **** 
 560:.\Generated_Source\PSoC5/PWM_4.c ****     /*******************************************************************************
 561:.\Generated_Source\PSoC5/PWM_4.c ****     * Function Name: PWM_4_WriteCompare2
 562:.\Generated_Source\PSoC5/PWM_4.c ****     ********************************************************************************
 563:.\Generated_Source\PSoC5/PWM_4.c ****     * 
 564:.\Generated_Source\PSoC5/PWM_4.c ****     * Summary:
 565:.\Generated_Source\PSoC5/PWM_4.c ****     *  This funtion is used to change the compare value, for compare1 output.  
 566:.\Generated_Source\PSoC5/PWM_4.c ****     *  The compare output will reflect the new value on the next UDB clock.  
 567:.\Generated_Source\PSoC5/PWM_4.c ****     *  The compare output will be driven high when the present counter value is 
 568:.\Generated_Source\PSoC5/PWM_4.c ****     *  less than or less than or equal to the compare register, depending on the 
 569:.\Generated_Source\PSoC5/PWM_4.c ****     *  mode.
 570:.\Generated_Source\PSoC5/PWM_4.c ****     *
 571:.\Generated_Source\PSoC5/PWM_4.c ****     * Parameters:  
 572:.\Generated_Source\PSoC5/PWM_4.c ****     *  compare:  New compare value.  
 573:.\Generated_Source\PSoC5/PWM_4.c ****     *
 574:.\Generated_Source\PSoC5/PWM_4.c ****     * Return: 
 575:.\Generated_Source\PSoC5/PWM_4.c ****     *  None
 576:.\Generated_Source\PSoC5/PWM_4.c ****     *
 577:.\Generated_Source\PSoC5/PWM_4.c ****     *******************************************************************************/
 578:.\Generated_Source\PSoC5/PWM_4.c ****     void PWM_4_WriteCompare2(uint16 compare) \
 579:.\Generated_Source\PSoC5/PWM_4.c ****                                         
 580:.\Generated_Source\PSoC5/PWM_4.c ****     {
 581:.\Generated_Source\PSoC5/PWM_4.c ****         #if(PWM_4_UsingFixedFunction)
 582:.\Generated_Source\PSoC5/PWM_4.c ****             CY_SET_REG16(PWM_4_COMPARE2_LSB_PTR, compare);
 583:.\Generated_Source\PSoC5/PWM_4.c ****         #else
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 18


 584:.\Generated_Source\PSoC5/PWM_4.c ****             CY_SET_REG16(PWM_4_COMPARE2_LSB_PTR, compare);
 585:.\Generated_Source\PSoC5/PWM_4.c ****         #endif /* (PWM_4_UsingFixedFunction) */
 586:.\Generated_Source\PSoC5/PWM_4.c ****     }
 587:.\Generated_Source\PSoC5/PWM_4.c **** #endif /* UseOneCompareMode */
 588:.\Generated_Source\PSoC5/PWM_4.c **** 
 589:.\Generated_Source\PSoC5/PWM_4.c **** #if (PWM_4_DeadBandUsed)
 590:.\Generated_Source\PSoC5/PWM_4.c **** 
 591:.\Generated_Source\PSoC5/PWM_4.c **** 
 592:.\Generated_Source\PSoC5/PWM_4.c ****     /*******************************************************************************
 593:.\Generated_Source\PSoC5/PWM_4.c ****     * Function Name: PWM_4_WriteDeadTime
 594:.\Generated_Source\PSoC5/PWM_4.c ****     ********************************************************************************
 595:.\Generated_Source\PSoC5/PWM_4.c ****     * 
 596:.\Generated_Source\PSoC5/PWM_4.c ****     * Summary:
 597:.\Generated_Source\PSoC5/PWM_4.c ****     *  This function writes the dead-band counts to the corresponding register
 598:.\Generated_Source\PSoC5/PWM_4.c ****     *
 599:.\Generated_Source\PSoC5/PWM_4.c ****     * Parameters:  
 600:.\Generated_Source\PSoC5/PWM_4.c ****     *  deadtime:  Number of counts for dead time 
 601:.\Generated_Source\PSoC5/PWM_4.c ****     *
 602:.\Generated_Source\PSoC5/PWM_4.c ****     * Return: 
 603:.\Generated_Source\PSoC5/PWM_4.c ****     *  None
 604:.\Generated_Source\PSoC5/PWM_4.c ****     *
 605:.\Generated_Source\PSoC5/PWM_4.c ****     *******************************************************************************/
 606:.\Generated_Source\PSoC5/PWM_4.c ****     void PWM_4_WriteDeadTime(uint8 deadtime) 
 607:.\Generated_Source\PSoC5/PWM_4.c ****     {
 608:.\Generated_Source\PSoC5/PWM_4.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 609:.\Generated_Source\PSoC5/PWM_4.c ****         #if(!PWM_4_DeadBand2_4)
 610:.\Generated_Source\PSoC5/PWM_4.c ****             CY_SET_REG8(PWM_4_DEADBAND_COUNT_PTR, deadtime);
 611:.\Generated_Source\PSoC5/PWM_4.c ****         #else
 612:.\Generated_Source\PSoC5/PWM_4.c ****             /* Otherwise the data has to be masked and offset */        
 613:.\Generated_Source\PSoC5/PWM_4.c ****             /* Clear existing data */
 614:.\Generated_Source\PSoC5/PWM_4.c ****             PWM_4_DEADBAND_COUNT &= ((uint8)(~PWM_4_DEADBAND_COUNT_MASK));
 615:.\Generated_Source\PSoC5/PWM_4.c ****             
 616:.\Generated_Source\PSoC5/PWM_4.c ****             /* Set new dead time */
 617:.\Generated_Source\PSoC5/PWM_4.c ****             #if(PWM_4_DEADBAND_COUNT_SHIFT)        
 618:.\Generated_Source\PSoC5/PWM_4.c ****                 PWM_4_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_4_DEADBAND_COUNT_SHIFT)) & 
 619:.\Generated_Source\PSoC5/PWM_4.c ****                                                     PWM_4_DEADBAND_COUNT_MASK;
 620:.\Generated_Source\PSoC5/PWM_4.c ****             #else
 621:.\Generated_Source\PSoC5/PWM_4.c ****                 PWM_4_DEADBAND_COUNT |= deadtime & PWM_4_DEADBAND_COUNT_MASK;        
 622:.\Generated_Source\PSoC5/PWM_4.c ****             #endif /* (PWM_4_DEADBAND_COUNT_SHIFT) */
 623:.\Generated_Source\PSoC5/PWM_4.c ****         
 624:.\Generated_Source\PSoC5/PWM_4.c ****         #endif /* (!PWM_4_DeadBand2_4) */
 625:.\Generated_Source\PSoC5/PWM_4.c ****     }
 626:.\Generated_Source\PSoC5/PWM_4.c **** 
 627:.\Generated_Source\PSoC5/PWM_4.c **** 
 628:.\Generated_Source\PSoC5/PWM_4.c ****     /*******************************************************************************
 629:.\Generated_Source\PSoC5/PWM_4.c ****     * Function Name: PWM_4_ReadDeadTime
 630:.\Generated_Source\PSoC5/PWM_4.c ****     ********************************************************************************
 631:.\Generated_Source\PSoC5/PWM_4.c ****     * 
 632:.\Generated_Source\PSoC5/PWM_4.c ****     * Summary:
 633:.\Generated_Source\PSoC5/PWM_4.c ****     *  This function reads the dead-band counts from the corresponding register
 634:.\Generated_Source\PSoC5/PWM_4.c ****     *
 635:.\Generated_Source\PSoC5/PWM_4.c ****     * Parameters:  
 636:.\Generated_Source\PSoC5/PWM_4.c ****     *  None
 637:.\Generated_Source\PSoC5/PWM_4.c ****     *
 638:.\Generated_Source\PSoC5/PWM_4.c ****     * Return: 
 639:.\Generated_Source\PSoC5/PWM_4.c ****     *  Dead Band Counts
 640:.\Generated_Source\PSoC5/PWM_4.c ****     *
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 19


 641:.\Generated_Source\PSoC5/PWM_4.c ****     *******************************************************************************/
 642:.\Generated_Source\PSoC5/PWM_4.c ****     uint8 PWM_4_ReadDeadTime(void) 
 643:.\Generated_Source\PSoC5/PWM_4.c ****     {
 644:.\Generated_Source\PSoC5/PWM_4.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 645:.\Generated_Source\PSoC5/PWM_4.c ****         #if(!PWM_4_DeadBand2_4)
 646:.\Generated_Source\PSoC5/PWM_4.c ****             return (CY_GET_REG8(PWM_4_DEADBAND_COUNT_PTR));
 647:.\Generated_Source\PSoC5/PWM_4.c ****         #else
 648:.\Generated_Source\PSoC5/PWM_4.c ****         
 649:.\Generated_Source\PSoC5/PWM_4.c ****             /* Otherwise the data has to be masked and offset */
 650:.\Generated_Source\PSoC5/PWM_4.c ****             #if(PWM_4_DEADBAND_COUNT_SHIFT)      
 651:.\Generated_Source\PSoC5/PWM_4.c ****                 return ((uint8)(((uint8)(PWM_4_DEADBAND_COUNT & PWM_4_DEADBAND_COUNT_MASK)) >> 
 652:.\Generated_Source\PSoC5/PWM_4.c ****                                                                            PWM_4_DEADBAND_COUNT_SHI
 653:.\Generated_Source\PSoC5/PWM_4.c ****             #else
 654:.\Generated_Source\PSoC5/PWM_4.c ****                 return (PWM_4_DEADBAND_COUNT & PWM_4_DEADBAND_COUNT_MASK);
 655:.\Generated_Source\PSoC5/PWM_4.c ****             #endif /* (PWM_4_DEADBAND_COUNT_SHIFT) */
 656:.\Generated_Source\PSoC5/PWM_4.c ****         #endif /* (!PWM_4_DeadBand2_4) */
 657:.\Generated_Source\PSoC5/PWM_4.c ****     }
 658:.\Generated_Source\PSoC5/PWM_4.c **** #endif /* DeadBandUsed */
 659:.\Generated_Source\PSoC5/PWM_4.c **** 
 660:.\Generated_Source\PSoC5/PWM_4.c **** #if (PWM_4_UseStatus || PWM_4_UsingFixedFunction)
 661:.\Generated_Source\PSoC5/PWM_4.c **** 
 662:.\Generated_Source\PSoC5/PWM_4.c **** 
 663:.\Generated_Source\PSoC5/PWM_4.c ****     /*******************************************************************************
 664:.\Generated_Source\PSoC5/PWM_4.c ****     * Function Name: PWM_4_SetInterruptMode
 665:.\Generated_Source\PSoC5/PWM_4.c ****     ********************************************************************************
 666:.\Generated_Source\PSoC5/PWM_4.c ****     * 
 667:.\Generated_Source\PSoC5/PWM_4.c ****     * Summary:
 668:.\Generated_Source\PSoC5/PWM_4.c ****     *  This function configures the interrupts mask control of theinterrupt 
 669:.\Generated_Source\PSoC5/PWM_4.c ****     *  source status register.
 670:.\Generated_Source\PSoC5/PWM_4.c ****     *
 671:.\Generated_Source\PSoC5/PWM_4.c ****     * Parameters:  
 672:.\Generated_Source\PSoC5/PWM_4.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled 
 673:.\Generated_Source\PSoC5/PWM_4.c ****     *
 674:.\Generated_Source\PSoC5/PWM_4.c ****     * Return: 
 675:.\Generated_Source\PSoC5/PWM_4.c ****     *  None
 676:.\Generated_Source\PSoC5/PWM_4.c ****     *
 677:.\Generated_Source\PSoC5/PWM_4.c ****     *******************************************************************************/
 678:.\Generated_Source\PSoC5/PWM_4.c ****     void PWM_4_SetInterruptMode(uint8 interruptMode)  
 679:.\Generated_Source\PSoC5/PWM_4.c ****     {
 387              		.loc 1 679 0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 8
 390              		@ frame_needed = 1, uses_anonymous_args = 0
 391              		@ link register save eliminated.
 392 0000 80B4     		push	{r7}
 393              	.LCFI15:
 394              		.cfi_def_cfa_offset 4
 395              		.cfi_offset 7, -4
 396 0002 83B0     		sub	sp, sp, #12
 397              	.LCFI16:
 398              		.cfi_def_cfa_offset 16
 399 0004 00AF     		add	r7, sp, #0
 400              	.LCFI17:
 401              		.cfi_def_cfa_register 7
 402 0006 0346     		mov	r3, r0
 403 0008 FB71     		strb	r3, [r7, #7]
 680:.\Generated_Source\PSoC5/PWM_4.c ****     	CY_SET_REG8(PWM_4_STATUS_MASK_PTR, interruptMode);
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 20


 404              		.loc 1 680 0
 405 000a 44F60373 		movw	r3, #20227
 406 000e C4F20003 		movt	r3, 16384
 407 0012 FA79     		ldrb	r2, [r7, #7]
 408 0014 1A70     		strb	r2, [r3, #0]
 681:.\Generated_Source\PSoC5/PWM_4.c ****     }
 409              		.loc 1 681 0
 410 0016 07F10C07 		add	r7, r7, #12
 411 001a BD46     		mov	sp, r7
 412 001c 80BC     		pop	{r7}
 413 001e 7047     		bx	lr
 414              		.cfi_endproc
 415              	.LFE6:
 416              		.size	PWM_4_SetInterruptMode, .-PWM_4_SetInterruptMode
 417              		.section	.text.PWM_4_ReadStatusRegister,"ax",%progbits
 418              		.align	2
 419              		.global	PWM_4_ReadStatusRegister
 420              		.thumb
 421              		.thumb_func
 422              		.type	PWM_4_ReadStatusRegister, %function
 423              	PWM_4_ReadStatusRegister:
 424              	.LFB7:
 682:.\Generated_Source\PSoC5/PWM_4.c **** 
 683:.\Generated_Source\PSoC5/PWM_4.c **** 
 684:.\Generated_Source\PSoC5/PWM_4.c ****     /*******************************************************************************
 685:.\Generated_Source\PSoC5/PWM_4.c ****     * Function Name: PWM_4_ReadStatusRegister
 686:.\Generated_Source\PSoC5/PWM_4.c ****     ********************************************************************************
 687:.\Generated_Source\PSoC5/PWM_4.c ****     * 
 688:.\Generated_Source\PSoC5/PWM_4.c ****     * Summary:
 689:.\Generated_Source\PSoC5/PWM_4.c ****     *  This function returns the current state of the status register. 
 690:.\Generated_Source\PSoC5/PWM_4.c ****     *
 691:.\Generated_Source\PSoC5/PWM_4.c ****     * Parameters:  
 692:.\Generated_Source\PSoC5/PWM_4.c ****     *  None
 693:.\Generated_Source\PSoC5/PWM_4.c ****     *
 694:.\Generated_Source\PSoC5/PWM_4.c ****     * Return: 
 695:.\Generated_Source\PSoC5/PWM_4.c ****     *  uint8 : Current status register value. The status register bits are:
 696:.\Generated_Source\PSoC5/PWM_4.c ****     *  [7:6] : Unused(0)
 697:.\Generated_Source\PSoC5/PWM_4.c ****     *  [5]   : Kill event output
 698:.\Generated_Source\PSoC5/PWM_4.c ****     *  [4]   : FIFO not empty
 699:.\Generated_Source\PSoC5/PWM_4.c ****     *  [3]   : FIFO full
 700:.\Generated_Source\PSoC5/PWM_4.c ****     *  [2]   : Terminal count
 701:.\Generated_Source\PSoC5/PWM_4.c ****     *  [1]   : Compare output 2
 702:.\Generated_Source\PSoC5/PWM_4.c ****     *  [0]   : Compare output 1
 703:.\Generated_Source\PSoC5/PWM_4.c ****     *
 704:.\Generated_Source\PSoC5/PWM_4.c ****     *******************************************************************************/
 705:.\Generated_Source\PSoC5/PWM_4.c ****     uint8 PWM_4_ReadStatusRegister(void)   
 706:.\Generated_Source\PSoC5/PWM_4.c ****     {
 425              		.loc 1 706 0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 8
 428              		@ frame_needed = 1, uses_anonymous_args = 0
 429              		@ link register save eliminated.
 430 0000 80B4     		push	{r7}
 431              	.LCFI18:
 432              		.cfi_def_cfa_offset 4
 433              		.cfi_offset 7, -4
 434 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 21


 435              	.LCFI19:
 436              		.cfi_def_cfa_offset 16
 437 0004 00AF     		add	r7, sp, #0
 438              	.LCFI20:
 439              		.cfi_def_cfa_register 7
 707:.\Generated_Source\PSoC5/PWM_4.c ****     	uint8 result;
 708:.\Generated_Source\PSoC5/PWM_4.c ****     	
 709:.\Generated_Source\PSoC5/PWM_4.c ****     	result = CY_GET_REG8(PWM_4_STATUS_PTR);
 440              		.loc 1 709 0
 441 0006 44F60373 		movw	r3, #20227
 442 000a C4F20003 		movt	r3, 16384
 443 000e 1B78     		ldrb	r3, [r3, #0]
 444 0010 FB71     		strb	r3, [r7, #7]
 710:.\Generated_Source\PSoC5/PWM_4.c ****     	return (result);
 445              		.loc 1 710 0
 446 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 711:.\Generated_Source\PSoC5/PWM_4.c ****     }
 447              		.loc 1 711 0
 448 0014 1846     		mov	r0, r3
 449 0016 07F10C07 		add	r7, r7, #12
 450 001a BD46     		mov	sp, r7
 451 001c 80BC     		pop	{r7}
 452 001e 7047     		bx	lr
 453              		.cfi_endproc
 454              	.LFE7:
 455              		.size	PWM_4_ReadStatusRegister, .-PWM_4_ReadStatusRegister
 456              		.section	.text.PWM_4_ReadControlRegister,"ax",%progbits
 457              		.align	2
 458              		.global	PWM_4_ReadControlRegister
 459              		.thumb
 460              		.thumb_func
 461              		.type	PWM_4_ReadControlRegister, %function
 462              	PWM_4_ReadControlRegister:
 463              	.LFB8:
 712:.\Generated_Source\PSoC5/PWM_4.c **** 
 713:.\Generated_Source\PSoC5/PWM_4.c **** #endif /* (PWM_4_UseStatus || PWM_4_UsingFixedFunction) */
 714:.\Generated_Source\PSoC5/PWM_4.c **** 
 715:.\Generated_Source\PSoC5/PWM_4.c **** 
 716:.\Generated_Source\PSoC5/PWM_4.c **** #if (PWM_4_UseControl)
 717:.\Generated_Source\PSoC5/PWM_4.c **** 
 718:.\Generated_Source\PSoC5/PWM_4.c **** 
 719:.\Generated_Source\PSoC5/PWM_4.c ****     /*******************************************************************************
 720:.\Generated_Source\PSoC5/PWM_4.c ****     * Function Name: PWM_4_ReadControlRegister
 721:.\Generated_Source\PSoC5/PWM_4.c ****     ********************************************************************************
 722:.\Generated_Source\PSoC5/PWM_4.c ****     * 
 723:.\Generated_Source\PSoC5/PWM_4.c ****     * Summary:
 724:.\Generated_Source\PSoC5/PWM_4.c ****     *  Returns the current state of the control register. This API is available 
 725:.\Generated_Source\PSoC5/PWM_4.c ****     *  only if the control register is not removed.
 726:.\Generated_Source\PSoC5/PWM_4.c ****     *
 727:.\Generated_Source\PSoC5/PWM_4.c ****     * Parameters:  
 728:.\Generated_Source\PSoC5/PWM_4.c ****     *  None 
 729:.\Generated_Source\PSoC5/PWM_4.c ****     *
 730:.\Generated_Source\PSoC5/PWM_4.c ****     * Return: 
 731:.\Generated_Source\PSoC5/PWM_4.c ****     *  uint8 : Current control register value
 732:.\Generated_Source\PSoC5/PWM_4.c ****     *
 733:.\Generated_Source\PSoC5/PWM_4.c ****     *******************************************************************************/    
 734:.\Generated_Source\PSoC5/PWM_4.c ****     uint8 PWM_4_ReadControlRegister(void) 
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 22


 735:.\Generated_Source\PSoC5/PWM_4.c ****     {
 464              		.loc 1 735 0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 8
 467              		@ frame_needed = 1, uses_anonymous_args = 0
 468              		@ link register save eliminated.
 469 0000 80B4     		push	{r7}
 470              	.LCFI21:
 471              		.cfi_def_cfa_offset 4
 472              		.cfi_offset 7, -4
 473 0002 83B0     		sub	sp, sp, #12
 474              	.LCFI22:
 475              		.cfi_def_cfa_offset 16
 476 0004 00AF     		add	r7, sp, #0
 477              	.LCFI23:
 478              		.cfi_def_cfa_register 7
 736:.\Generated_Source\PSoC5/PWM_4.c ****     	uint8 result;
 737:.\Generated_Source\PSoC5/PWM_4.c ****     	
 738:.\Generated_Source\PSoC5/PWM_4.c ****     	result = CY_GET_REG8(PWM_4_CONTROL_PTR);
 479              		.loc 1 738 0
 480 0006 4FF49E43 		mov	r3, #20224
 481 000a C4F20003 		movt	r3, 16384
 482 000e 1B78     		ldrb	r3, [r3, #0]
 483 0010 FB71     		strb	r3, [r7, #7]
 739:.\Generated_Source\PSoC5/PWM_4.c ****     	return (result);
 484              		.loc 1 739 0
 485 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 740:.\Generated_Source\PSoC5/PWM_4.c ****     }
 486              		.loc 1 740 0
 487 0014 1846     		mov	r0, r3
 488 0016 07F10C07 		add	r7, r7, #12
 489 001a BD46     		mov	sp, r7
 490 001c 80BC     		pop	{r7}
 491 001e 7047     		bx	lr
 492              		.cfi_endproc
 493              	.LFE8:
 494              		.size	PWM_4_ReadControlRegister, .-PWM_4_ReadControlRegister
 495              		.section	.text.PWM_4_WriteControlRegister,"ax",%progbits
 496              		.align	2
 497              		.global	PWM_4_WriteControlRegister
 498              		.thumb
 499              		.thumb_func
 500              		.type	PWM_4_WriteControlRegister, %function
 501              	PWM_4_WriteControlRegister:
 502              	.LFB9:
 741:.\Generated_Source\PSoC5/PWM_4.c **** 
 742:.\Generated_Source\PSoC5/PWM_4.c **** 
 743:.\Generated_Source\PSoC5/PWM_4.c ****     /*******************************************************************************
 744:.\Generated_Source\PSoC5/PWM_4.c ****     * Function Name: PWM_4_WriteControlRegister
 745:.\Generated_Source\PSoC5/PWM_4.c ****     ********************************************************************************
 746:.\Generated_Source\PSoC5/PWM_4.c ****     * 
 747:.\Generated_Source\PSoC5/PWM_4.c ****     * Summary:
 748:.\Generated_Source\PSoC5/PWM_4.c ****     *  Sets the bit field of the control register. This API is available only if 
 749:.\Generated_Source\PSoC5/PWM_4.c ****     *  the control register is not removed.
 750:.\Generated_Source\PSoC5/PWM_4.c ****     *
 751:.\Generated_Source\PSoC5/PWM_4.c ****     * Parameters:  
 752:.\Generated_Source\PSoC5/PWM_4.c ****     *  uint8 control: Control register bit field, The status register bits are:
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 23


 753:.\Generated_Source\PSoC5/PWM_4.c ****     *  [7]   : PWM Enable
 754:.\Generated_Source\PSoC5/PWM_4.c ****     *  [6]   : Reset
 755:.\Generated_Source\PSoC5/PWM_4.c ****     *  [5:3] : Compare Mode2
 756:.\Generated_Source\PSoC5/PWM_4.c ****     *  [2:0] : Compare Mode2
 757:.\Generated_Source\PSoC5/PWM_4.c ****     *
 758:.\Generated_Source\PSoC5/PWM_4.c ****     * Return: 
 759:.\Generated_Source\PSoC5/PWM_4.c ****     *  None
 760:.\Generated_Source\PSoC5/PWM_4.c ****     *
 761:.\Generated_Source\PSoC5/PWM_4.c ****     *******************************************************************************/  
 762:.\Generated_Source\PSoC5/PWM_4.c ****     void PWM_4_WriteControlRegister(uint8 control) 
 763:.\Generated_Source\PSoC5/PWM_4.c ****     {
 503              		.loc 1 763 0
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 8
 506              		@ frame_needed = 1, uses_anonymous_args = 0
 507              		@ link register save eliminated.
 508 0000 80B4     		push	{r7}
 509              	.LCFI24:
 510              		.cfi_def_cfa_offset 4
 511              		.cfi_offset 7, -4
 512 0002 83B0     		sub	sp, sp, #12
 513              	.LCFI25:
 514              		.cfi_def_cfa_offset 16
 515 0004 00AF     		add	r7, sp, #0
 516              	.LCFI26:
 517              		.cfi_def_cfa_register 7
 518 0006 0346     		mov	r3, r0
 519 0008 FB71     		strb	r3, [r7, #7]
 764:.\Generated_Source\PSoC5/PWM_4.c ****     	CY_SET_REG8(PWM_4_CONTROL_PTR, control);
 520              		.loc 1 764 0
 521 000a 4FF49E43 		mov	r3, #20224
 522 000e C4F20003 		movt	r3, 16384
 523 0012 FA79     		ldrb	r2, [r7, #7]
 524 0014 1A70     		strb	r2, [r3, #0]
 765:.\Generated_Source\PSoC5/PWM_4.c ****     }
 525              		.loc 1 765 0
 526 0016 07F10C07 		add	r7, r7, #12
 527 001a BD46     		mov	sp, r7
 528 001c 80BC     		pop	{r7}
 529 001e 7047     		bx	lr
 530              		.cfi_endproc
 531              	.LFE9:
 532              		.size	PWM_4_WriteControlRegister, .-PWM_4_WriteControlRegister
 533              		.section	.text.PWM_4_ReadCompare,"ax",%progbits
 534              		.align	2
 535              		.global	PWM_4_ReadCompare
 536              		.thumb
 537              		.thumb_func
 538              		.type	PWM_4_ReadCompare, %function
 539              	PWM_4_ReadCompare:
 540              	.LFB10:
 766:.\Generated_Source\PSoC5/PWM_4.c **** 	
 767:.\Generated_Source\PSoC5/PWM_4.c **** #endif /* (PWM_4_UseControl) */
 768:.\Generated_Source\PSoC5/PWM_4.c **** 
 769:.\Generated_Source\PSoC5/PWM_4.c **** 
 770:.\Generated_Source\PSoC5/PWM_4.c **** #if (!PWM_4_UsingFixedFunction)
 771:.\Generated_Source\PSoC5/PWM_4.c **** 
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 24


 772:.\Generated_Source\PSoC5/PWM_4.c **** 
 773:.\Generated_Source\PSoC5/PWM_4.c ****     /*******************************************************************************
 774:.\Generated_Source\PSoC5/PWM_4.c ****     * Function Name: PWM_4_ReadCapture
 775:.\Generated_Source\PSoC5/PWM_4.c ****     ********************************************************************************
 776:.\Generated_Source\PSoC5/PWM_4.c ****     * 
 777:.\Generated_Source\PSoC5/PWM_4.c ****     * Summary:
 778:.\Generated_Source\PSoC5/PWM_4.c ****     *  Reads the capture value from the capture FIFO.
 779:.\Generated_Source\PSoC5/PWM_4.c ****     *
 780:.\Generated_Source\PSoC5/PWM_4.c ****     * Parameters:  
 781:.\Generated_Source\PSoC5/PWM_4.c ****     *  None
 782:.\Generated_Source\PSoC5/PWM_4.c ****     *
 783:.\Generated_Source\PSoC5/PWM_4.c ****     * Return: 
 784:.\Generated_Source\PSoC5/PWM_4.c ****     *  uint8/uint16: The current capture value
 785:.\Generated_Source\PSoC5/PWM_4.c ****     *
 786:.\Generated_Source\PSoC5/PWM_4.c ****     *******************************************************************************/  
 787:.\Generated_Source\PSoC5/PWM_4.c ****     uint16 PWM_4_ReadCapture(void)  
 788:.\Generated_Source\PSoC5/PWM_4.c ****     {
 789:.\Generated_Source\PSoC5/PWM_4.c ****     	return (CY_GET_REG16(PWM_4_CAPTURE_LSB_PTR));
 790:.\Generated_Source\PSoC5/PWM_4.c ****     }
 791:.\Generated_Source\PSoC5/PWM_4.c **** 	
 792:.\Generated_Source\PSoC5/PWM_4.c **** #endif /* (!PWM_4_UsingFixedFunction) */
 793:.\Generated_Source\PSoC5/PWM_4.c **** 
 794:.\Generated_Source\PSoC5/PWM_4.c **** 
 795:.\Generated_Source\PSoC5/PWM_4.c **** #if (PWM_4_UseOneCompareMode)
 796:.\Generated_Source\PSoC5/PWM_4.c **** 
 797:.\Generated_Source\PSoC5/PWM_4.c **** 
 798:.\Generated_Source\PSoC5/PWM_4.c ****     /*******************************************************************************
 799:.\Generated_Source\PSoC5/PWM_4.c ****     * Function Name: PWM_4_ReadCompare
 800:.\Generated_Source\PSoC5/PWM_4.c ****     ********************************************************************************
 801:.\Generated_Source\PSoC5/PWM_4.c ****     * 
 802:.\Generated_Source\PSoC5/PWM_4.c ****     * Summary:
 803:.\Generated_Source\PSoC5/PWM_4.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is 
 804:.\Generated_Source\PSoC5/PWM_4.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 805:.\Generated_Source\PSoC5/PWM_4.c ****     *
 806:.\Generated_Source\PSoC5/PWM_4.c ****     * Parameters:  
 807:.\Generated_Source\PSoC5/PWM_4.c ****     *  None
 808:.\Generated_Source\PSoC5/PWM_4.c ****     *
 809:.\Generated_Source\PSoC5/PWM_4.c ****     * Return: 
 810:.\Generated_Source\PSoC5/PWM_4.c ****     *  uint8/uint16: Current compare value
 811:.\Generated_Source\PSoC5/PWM_4.c ****     *
 812:.\Generated_Source\PSoC5/PWM_4.c ****     *******************************************************************************/  
 813:.\Generated_Source\PSoC5/PWM_4.c ****     uint16 PWM_4_ReadCompare(void)  
 814:.\Generated_Source\PSoC5/PWM_4.c ****     {
 541              		.loc 1 814 0
 542              		.cfi_startproc
 543              		@ args = 0, pretend = 0, frame = 0
 544              		@ frame_needed = 1, uses_anonymous_args = 0
 545              		@ link register save eliminated.
 546 0000 80B4     		push	{r7}
 547              	.LCFI27:
 548              		.cfi_def_cfa_offset 4
 549              		.cfi_offset 7, -4
 550 0002 00AF     		add	r7, sp, #0
 551              	.LCFI28:
 552              		.cfi_def_cfa_register 7
 815:.\Generated_Source\PSoC5/PWM_4.c **** 		#if(PWM_4_UsingFixedFunction)
 816:.\Generated_Source\PSoC5/PWM_4.c ****             return ((uint16)CY_GET_REG16(PWM_4_COMPARE1_LSB_PTR));
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 25


 553              		.loc 1 816 0
 554 0004 44F60673 		movw	r3, #20230
 555 0008 C4F20003 		movt	r3, 16384
 556 000c 1B88     		ldrh	r3, [r3, #0]	@ movhi
 557 000e 9BB2     		uxth	r3, r3
 817:.\Generated_Source\PSoC5/PWM_4.c ****         #else
 818:.\Generated_Source\PSoC5/PWM_4.c ****             return (CY_GET_REG16(PWM_4_COMPARE1_LSB_PTR));
 819:.\Generated_Source\PSoC5/PWM_4.c ****         #endif /* (PWM_4_UsingFixedFunction) */
 820:.\Generated_Source\PSoC5/PWM_4.c ****     }
 558              		.loc 1 820 0
 559 0010 1846     		mov	r0, r3
 560 0012 BD46     		mov	sp, r7
 561 0014 80BC     		pop	{r7}
 562 0016 7047     		bx	lr
 563              		.cfi_endproc
 564              	.LFE10:
 565              		.size	PWM_4_ReadCompare, .-PWM_4_ReadCompare
 566              		.section	.text.PWM_4_ReadPeriod,"ax",%progbits
 567              		.align	2
 568              		.global	PWM_4_ReadPeriod
 569              		.thumb
 570              		.thumb_func
 571              		.type	PWM_4_ReadPeriod, %function
 572              	PWM_4_ReadPeriod:
 573              	.LFB11:
 821:.\Generated_Source\PSoC5/PWM_4.c **** 
 822:.\Generated_Source\PSoC5/PWM_4.c **** #else
 823:.\Generated_Source\PSoC5/PWM_4.c **** 
 824:.\Generated_Source\PSoC5/PWM_4.c **** 
 825:.\Generated_Source\PSoC5/PWM_4.c ****     /*******************************************************************************
 826:.\Generated_Source\PSoC5/PWM_4.c ****     * Function Name: PWM_4_ReadCompare1
 827:.\Generated_Source\PSoC5/PWM_4.c ****     ********************************************************************************
 828:.\Generated_Source\PSoC5/PWM_4.c ****     * 
 829:.\Generated_Source\PSoC5/PWM_4.c ****     * Summary:
 830:.\Generated_Source\PSoC5/PWM_4.c ****     *  Reads the compare value for the compare1 output.
 831:.\Generated_Source\PSoC5/PWM_4.c ****     *
 832:.\Generated_Source\PSoC5/PWM_4.c ****     * Parameters:  
 833:.\Generated_Source\PSoC5/PWM_4.c ****     *  None
 834:.\Generated_Source\PSoC5/PWM_4.c ****     *
 835:.\Generated_Source\PSoC5/PWM_4.c ****     * Return: 
 836:.\Generated_Source\PSoC5/PWM_4.c ****     *  uint8/uint16: Current compare value.
 837:.\Generated_Source\PSoC5/PWM_4.c ****     *
 838:.\Generated_Source\PSoC5/PWM_4.c ****     *******************************************************************************/  
 839:.\Generated_Source\PSoC5/PWM_4.c ****     uint16 PWM_4_ReadCompare1(void) 
 840:.\Generated_Source\PSoC5/PWM_4.c ****     {
 841:.\Generated_Source\PSoC5/PWM_4.c **** 		return (CY_GET_REG16(PWM_4_COMPARE1_LSB_PTR));
 842:.\Generated_Source\PSoC5/PWM_4.c ****     }
 843:.\Generated_Source\PSoC5/PWM_4.c **** 
 844:.\Generated_Source\PSoC5/PWM_4.c **** 
 845:.\Generated_Source\PSoC5/PWM_4.c ****     /*******************************************************************************
 846:.\Generated_Source\PSoC5/PWM_4.c ****     * Function Name: PWM_4_ReadCompare2
 847:.\Generated_Source\PSoC5/PWM_4.c ****     ********************************************************************************
 848:.\Generated_Source\PSoC5/PWM_4.c ****     * 
 849:.\Generated_Source\PSoC5/PWM_4.c ****     * Summary:
 850:.\Generated_Source\PSoC5/PWM_4.c ****     *  Reads the compare value for the compare2 output.
 851:.\Generated_Source\PSoC5/PWM_4.c ****     *
 852:.\Generated_Source\PSoC5/PWM_4.c ****     * Parameters:  
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 26


 853:.\Generated_Source\PSoC5/PWM_4.c ****     *  None
 854:.\Generated_Source\PSoC5/PWM_4.c ****     *
 855:.\Generated_Source\PSoC5/PWM_4.c ****     * Return: 
 856:.\Generated_Source\PSoC5/PWM_4.c ****     *  uint8/uint16: Current compare value.
 857:.\Generated_Source\PSoC5/PWM_4.c ****     *
 858:.\Generated_Source\PSoC5/PWM_4.c ****     *******************************************************************************/  
 859:.\Generated_Source\PSoC5/PWM_4.c ****     uint16 PWM_4_ReadCompare2(void)  
 860:.\Generated_Source\PSoC5/PWM_4.c ****     {
 861:.\Generated_Source\PSoC5/PWM_4.c **** 		return (CY_GET_REG16(PWM_4_COMPARE2_LSB_PTR));
 862:.\Generated_Source\PSoC5/PWM_4.c ****     }
 863:.\Generated_Source\PSoC5/PWM_4.c **** 
 864:.\Generated_Source\PSoC5/PWM_4.c **** #endif /* (PWM_4_UseOneCompareMode) */
 865:.\Generated_Source\PSoC5/PWM_4.c **** 
 866:.\Generated_Source\PSoC5/PWM_4.c **** 
 867:.\Generated_Source\PSoC5/PWM_4.c **** /*******************************************************************************
 868:.\Generated_Source\PSoC5/PWM_4.c **** * Function Name: PWM_4_ReadPeriod
 869:.\Generated_Source\PSoC5/PWM_4.c **** ********************************************************************************
 870:.\Generated_Source\PSoC5/PWM_4.c **** * 
 871:.\Generated_Source\PSoC5/PWM_4.c **** * Summary:
 872:.\Generated_Source\PSoC5/PWM_4.c **** *  Reads the period value used by the PWM hardware.
 873:.\Generated_Source\PSoC5/PWM_4.c **** *
 874:.\Generated_Source\PSoC5/PWM_4.c **** * Parameters:  
 875:.\Generated_Source\PSoC5/PWM_4.c **** *  None
 876:.\Generated_Source\PSoC5/PWM_4.c **** *
 877:.\Generated_Source\PSoC5/PWM_4.c **** * Return: 
 878:.\Generated_Source\PSoC5/PWM_4.c **** *  uint8/16: Period value
 879:.\Generated_Source\PSoC5/PWM_4.c **** *
 880:.\Generated_Source\PSoC5/PWM_4.c **** *******************************************************************************/ 
 881:.\Generated_Source\PSoC5/PWM_4.c **** uint16 PWM_4_ReadPeriod(void) 
 882:.\Generated_Source\PSoC5/PWM_4.c **** {
 574              		.loc 1 882 0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 0
 577              		@ frame_needed = 1, uses_anonymous_args = 0
 578              		@ link register save eliminated.
 579 0000 80B4     		push	{r7}
 580              	.LCFI29:
 581              		.cfi_def_cfa_offset 4
 582              		.cfi_offset 7, -4
 583 0002 00AF     		add	r7, sp, #0
 584              	.LCFI30:
 585              		.cfi_def_cfa_register 7
 883:.\Generated_Source\PSoC5/PWM_4.c **** 	#if(PWM_4_UsingFixedFunction)
 884:.\Generated_Source\PSoC5/PWM_4.c ****         return ((uint16)CY_GET_REG16(PWM_4_PERIOD_LSB_PTR));
 586              		.loc 1 884 0
 587 0004 44F60473 		movw	r3, #20228
 588 0008 C4F20003 		movt	r3, 16384
 589 000c 1B88     		ldrh	r3, [r3, #0]	@ movhi
 590 000e 9BB2     		uxth	r3, r3
 885:.\Generated_Source\PSoC5/PWM_4.c ****     #else
 886:.\Generated_Source\PSoC5/PWM_4.c ****         return (CY_GET_REG16(PWM_4_PERIOD_LSB_PTR));
 887:.\Generated_Source\PSoC5/PWM_4.c ****     #endif /* (PWM_4_UsingFixedFunction) */
 888:.\Generated_Source\PSoC5/PWM_4.c **** }
 591              		.loc 1 888 0
 592 0010 1846     		mov	r0, r3
 593 0012 BD46     		mov	sp, r7
 594 0014 80BC     		pop	{r7}
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 27


 595 0016 7047     		bx	lr
 596              		.cfi_endproc
 597              	.LFE11:
 598              		.size	PWM_4_ReadPeriod, .-PWM_4_ReadPeriod
 599              		.text
 600              	.Letext0:
 601              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 602              		.section	.debug_info,"",%progbits
 603              	.Ldebug_info0:
 604 0000 7B020000 		.4byte	0x27b
 605 0004 0200     		.2byte	0x2
 606 0006 00000000 		.4byte	.Ldebug_abbrev0
 607 000a 04       		.byte	0x4
 608 000b 01       		.uleb128 0x1
 609 000c 1E020000 		.4byte	.LASF35
 610 0010 01       		.byte	0x1
 611 0011 32000000 		.4byte	.LASF36
 612 0015 B0000000 		.4byte	.LASF37
 613 0019 00000000 		.4byte	.Ldebug_ranges0+0
 614 001d 00000000 		.4byte	0
 615 0021 00000000 		.4byte	0
 616 0025 00000000 		.4byte	.Ldebug_line0
 617 0029 02       		.uleb128 0x2
 618 002a 01       		.byte	0x1
 619 002b 06       		.byte	0x6
 620 002c 80020000 		.4byte	.LASF0
 621 0030 02       		.uleb128 0x2
 622 0031 01       		.byte	0x1
 623 0032 08       		.byte	0x8
 624 0033 7D000000 		.4byte	.LASF1
 625 0037 02       		.uleb128 0x2
 626 0038 02       		.byte	0x2
 627 0039 05       		.byte	0x5
 628 003a FA010000 		.4byte	.LASF2
 629 003e 02       		.uleb128 0x2
 630 003f 02       		.byte	0x2
 631 0040 07       		.byte	0x7
 632 0041 1F000000 		.4byte	.LASF3
 633 0045 02       		.uleb128 0x2
 634 0046 04       		.byte	0x4
 635 0047 05       		.byte	0x5
 636 0048 72020000 		.4byte	.LASF4
 637 004c 02       		.uleb128 0x2
 638 004d 04       		.byte	0x4
 639 004e 07       		.byte	0x7
 640 004f 90000000 		.4byte	.LASF5
 641 0053 02       		.uleb128 0x2
 642 0054 08       		.byte	0x8
 643 0055 05       		.byte	0x5
 644 0056 D0010000 		.4byte	.LASF6
 645 005a 02       		.uleb128 0x2
 646 005b 08       		.byte	0x8
 647 005c 07       		.byte	0x7
 648 005d 7D010000 		.4byte	.LASF7
 649 0061 03       		.uleb128 0x3
 650 0062 04       		.byte	0x4
 651 0063 05       		.byte	0x5
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 28


 652 0064 696E7400 		.ascii	"int\000"
 653 0068 02       		.uleb128 0x2
 654 0069 04       		.byte	0x4
 655 006a 07       		.byte	0x7
 656 006b 70010000 		.4byte	.LASF8
 657 006f 04       		.uleb128 0x4
 658 0070 A2000000 		.4byte	.LASF9
 659 0074 02       		.byte	0x2
 660 0075 5B       		.byte	0x5b
 661 0076 30000000 		.4byte	0x30
 662 007a 04       		.uleb128 0x4
 663 007b 69010000 		.4byte	.LASF10
 664 007f 02       		.byte	0x2
 665 0080 5C       		.byte	0x5c
 666 0081 3E000000 		.4byte	0x3e
 667 0085 02       		.uleb128 0x2
 668 0086 04       		.byte	0x4
 669 0087 04       		.byte	0x4
 670 0088 66000000 		.4byte	.LASF11
 671 008c 02       		.uleb128 0x2
 672 008d 08       		.byte	0x8
 673 008e 04       		.byte	0x4
 674 008f 38010000 		.4byte	.LASF12
 675 0093 02       		.uleb128 0x2
 676 0094 01       		.byte	0x1
 677 0095 08       		.byte	0x8
 678 0096 7B020000 		.4byte	.LASF13
 679 009a 04       		.uleb128 0x4
 680 009b 8B000000 		.4byte	.LASF14
 681 009f 02       		.byte	0x2
 682 00a0 F0       		.byte	0xf0
 683 00a1 A5000000 		.4byte	0xa5
 684 00a5 05       		.uleb128 0x5
 685 00a6 6F000000 		.4byte	0x6f
 686 00aa 04       		.uleb128 0x4
 687 00ab 00000000 		.4byte	.LASF15
 688 00af 02       		.byte	0x2
 689 00b0 F1       		.byte	0xf1
 690 00b1 B5000000 		.4byte	0xb5
 691 00b5 05       		.uleb128 0x5
 692 00b6 7A000000 		.4byte	0x7a
 693 00ba 02       		.uleb128 0x2
 694 00bb 04       		.byte	0x4
 695 00bc 07       		.byte	0x7
 696 00bd AC010000 		.4byte	.LASF16
 697 00c1 06       		.uleb128 0x6
 698 00c2 01       		.byte	0x1
 699 00c3 9B010000 		.4byte	.LASF17
 700 00c7 01       		.byte	0x1
 701 00c8 32       		.byte	0x32
 702 00c9 01       		.byte	0x1
 703 00ca 00000000 		.4byte	.LFB0
 704 00ce 2A000000 		.4byte	.LFE0
 705 00d2 00000000 		.4byte	.LLST0
 706 00d6 01       		.byte	0x1
 707 00d7 07       		.uleb128 0x7
 708 00d8 01       		.byte	0x1
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 29


 709 00d9 3F010000 		.4byte	.LASF20
 710 00dd 01       		.byte	0x1
 711 00de 4F       		.byte	0x4f
 712 00df 01       		.byte	0x1
 713 00e0 00000000 		.4byte	.LFB1
 714 00e4 0E010000 		.4byte	.LFE1
 715 00e8 2C000000 		.4byte	.LLST1
 716 00ec 01       		.byte	0x1
 717 00ed 00010000 		.4byte	0x100
 718 00f1 08       		.uleb128 0x8
 719 00f2 A7010000 		.4byte	.LASF27
 720 00f6 01       		.byte	0x1
 721 00f7 52       		.byte	0x52
 722 00f8 6F000000 		.4byte	0x6f
 723 00fc 02       		.byte	0x2
 724 00fd 91       		.byte	0x91
 725 00fe 77       		.sleb128 -9
 726 00ff 00       		.byte	0
 727 0100 09       		.uleb128 0x9
 728 0101 01       		.byte	0x1
 729 0102 4A010000 		.4byte	.LASF18
 730 0106 01       		.byte	0x1
 731 0107 C1       		.byte	0xc1
 732 0108 01       		.byte	0x1
 733 0109 00000000 		.4byte	.LFB2
 734 010d 5E000000 		.4byte	.LFE2
 735 0111 64000000 		.4byte	.LLST2
 736 0115 01       		.byte	0x1
 737 0116 09       		.uleb128 0x9
 738 0117 01       		.byte	0x1
 739 0118 67020000 		.4byte	.LASF19
 740 011c 01       		.byte	0x1
 741 011d E3       		.byte	0xe3
 742 011e 01       		.byte	0x1
 743 011f 00000000 		.4byte	.LFB3
 744 0123 5E000000 		.4byte	.LFE3
 745 0127 90000000 		.4byte	.LLST3
 746 012b 01       		.byte	0x1
 747 012c 0A       		.uleb128 0xa
 748 012d 01       		.byte	0x1
 749 012e 06000000 		.4byte	.LASF21
 750 0132 01       		.byte	0x1
 751 0133 DC01     		.2byte	0x1dc
 752 0135 01       		.byte	0x1
 753 0136 00000000 		.4byte	.LFB4
 754 013a 20000000 		.4byte	.LFE4
 755 013e BC000000 		.4byte	.LLST4
 756 0142 01       		.byte	0x1
 757 0143 57010000 		.4byte	0x157
 758 0147 0B       		.uleb128 0xb
 759 0148 18000000 		.4byte	.LASF23
 760 014c 01       		.byte	0x1
 761 014d DC01     		.2byte	0x1dc
 762 014f 7A000000 		.4byte	0x7a
 763 0153 02       		.byte	0x2
 764 0154 91       		.byte	0x91
 765 0155 76       		.sleb128 -10
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 30


 766 0156 00       		.byte	0
 767 0157 0A       		.uleb128 0xa
 768 0158 01       		.byte	0x1
 769 0159 53000000 		.4byte	.LASF22
 770 015d 01       		.byte	0x1
 771 015e FE01     		.2byte	0x1fe
 772 0160 01       		.byte	0x1
 773 0161 00000000 		.4byte	.LFB5
 774 0165 20000000 		.4byte	.LFE5
 775 0169 F4000000 		.4byte	.LLST5
 776 016d 01       		.byte	0x1
 777 016e 82010000 		.4byte	0x182
 778 0172 0B       		.uleb128 0xb
 779 0173 8C020000 		.4byte	.LASF24
 780 0177 01       		.byte	0x1
 781 0178 FE01     		.2byte	0x1fe
 782 017a 7A000000 		.4byte	0x7a
 783 017e 02       		.byte	0x2
 784 017f 91       		.byte	0x91
 785 0180 76       		.sleb128 -10
 786 0181 00       		.byte	0
 787 0182 0A       		.uleb128 0xa
 788 0183 01       		.byte	0x1
 789 0184 08010000 		.4byte	.LASF25
 790 0188 01       		.byte	0x1
 791 0189 A602     		.2byte	0x2a6
 792 018b 01       		.byte	0x1
 793 018c 00000000 		.4byte	.LFB6
 794 0190 20000000 		.4byte	.LFE6
 795 0194 2C010000 		.4byte	.LLST6
 796 0198 01       		.byte	0x1
 797 0199 AD010000 		.4byte	0x1ad
 798 019d 0B       		.uleb128 0xb
 799 019e DE010000 		.4byte	.LASF26
 800 01a2 01       		.byte	0x1
 801 01a3 A602     		.2byte	0x2a6
 802 01a5 6F000000 		.4byte	0x6f
 803 01a9 02       		.byte	0x2
 804 01aa 91       		.byte	0x91
 805 01ab 77       		.sleb128 -9
 806 01ac 00       		.byte	0
 807 01ad 0C       		.uleb128 0xc
 808 01ae 01       		.byte	0x1
 809 01af 1F010000 		.4byte	.LASF29
 810 01b3 01       		.byte	0x1
 811 01b4 C102     		.2byte	0x2c1
 812 01b6 01       		.byte	0x1
 813 01b7 6F000000 		.4byte	0x6f
 814 01bb 00000000 		.4byte	.LFB7
 815 01bf 20000000 		.4byte	.LFE7
 816 01c3 64010000 		.4byte	.LLST7
 817 01c7 01       		.byte	0x1
 818 01c8 DC010000 		.4byte	0x1dc
 819 01cc 0D       		.uleb128 0xd
 820 01cd 94010000 		.4byte	.LASF28
 821 01d1 01       		.byte	0x1
 822 01d2 C302     		.2byte	0x2c3
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 31


 823 01d4 6F000000 		.4byte	0x6f
 824 01d8 02       		.byte	0x2
 825 01d9 91       		.byte	0x91
 826 01da 77       		.sleb128 -9
 827 01db 00       		.byte	0
 828 01dc 0C       		.uleb128 0xc
 829 01dd 01       		.byte	0x1
 830 01de 04020000 		.4byte	.LASF30
 831 01e2 01       		.byte	0x1
 832 01e3 DE02     		.2byte	0x2de
 833 01e5 01       		.byte	0x1
 834 01e6 6F000000 		.4byte	0x6f
 835 01ea 00000000 		.4byte	.LFB8
 836 01ee 20000000 		.4byte	.LFE8
 837 01f2 9C010000 		.4byte	.LLST8
 838 01f6 01       		.byte	0x1
 839 01f7 0B020000 		.4byte	0x20b
 840 01fb 0D       		.uleb128 0xd
 841 01fc 94010000 		.4byte	.LASF28
 842 0200 01       		.byte	0x1
 843 0201 E002     		.2byte	0x2e0
 844 0203 6F000000 		.4byte	0x6f
 845 0207 02       		.byte	0x2
 846 0208 91       		.byte	0x91
 847 0209 77       		.sleb128 -9
 848 020a 00       		.byte	0
 849 020b 0A       		.uleb128 0xa
 850 020c 01       		.byte	0x1
 851 020d B5010000 		.4byte	.LASF31
 852 0211 01       		.byte	0x1
 853 0212 FA02     		.2byte	0x2fa
 854 0214 01       		.byte	0x1
 855 0215 00000000 		.4byte	.LFB9
 856 0219 20000000 		.4byte	.LFE9
 857 021d D4010000 		.4byte	.LLST9
 858 0221 01       		.byte	0x1
 859 0222 36020000 		.4byte	0x236
 860 0226 0B       		.uleb128 0xb
 861 0227 A8000000 		.4byte	.LASF32
 862 022b 01       		.byte	0x1
 863 022c FA02     		.2byte	0x2fa
 864 022e 6F000000 		.4byte	0x6f
 865 0232 02       		.byte	0x2
 866 0233 91       		.byte	0x91
 867 0234 77       		.sleb128 -9
 868 0235 00       		.byte	0
 869 0236 0E       		.uleb128 0xe
 870 0237 01       		.byte	0x1
 871 0238 57010000 		.4byte	.LASF33
 872 023c 01       		.byte	0x1
 873 023d 2D03     		.2byte	0x32d
 874 023f 01       		.byte	0x1
 875 0240 7A000000 		.4byte	0x7a
 876 0244 00000000 		.4byte	.LFB10
 877 0248 18000000 		.4byte	.LFE10
 878 024c 0C020000 		.4byte	.LLST10
 879 0250 01       		.byte	0x1
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 32


 880 0251 0E       		.uleb128 0xe
 881 0252 01       		.byte	0x1
 882 0253 6C000000 		.4byte	.LASF34
 883 0257 01       		.byte	0x1
 884 0258 7103     		.2byte	0x371
 885 025a 01       		.byte	0x1
 886 025b 7A000000 		.4byte	0x7a
 887 025f 00000000 		.4byte	.LFB11
 888 0263 18000000 		.4byte	.LFE11
 889 0267 38020000 		.4byte	.LLST11
 890 026b 01       		.byte	0x1
 891 026c 0F       		.uleb128 0xf
 892 026d EC010000 		.4byte	.LASF38
 893 0271 01       		.byte	0x1
 894 0272 1B       		.byte	0x1b
 895 0273 6F000000 		.4byte	0x6f
 896 0277 01       		.byte	0x1
 897 0278 05       		.byte	0x5
 898 0279 03       		.byte	0x3
 899 027a 00000000 		.4byte	PWM_4_initVar
 900 027e 00       		.byte	0
 901              		.section	.debug_abbrev,"",%progbits
 902              	.Ldebug_abbrev0:
 903 0000 01       		.uleb128 0x1
 904 0001 11       		.uleb128 0x11
 905 0002 01       		.byte	0x1
 906 0003 25       		.uleb128 0x25
 907 0004 0E       		.uleb128 0xe
 908 0005 13       		.uleb128 0x13
 909 0006 0B       		.uleb128 0xb
 910 0007 03       		.uleb128 0x3
 911 0008 0E       		.uleb128 0xe
 912 0009 1B       		.uleb128 0x1b
 913 000a 0E       		.uleb128 0xe
 914 000b 55       		.uleb128 0x55
 915 000c 06       		.uleb128 0x6
 916 000d 11       		.uleb128 0x11
 917 000e 01       		.uleb128 0x1
 918 000f 52       		.uleb128 0x52
 919 0010 01       		.uleb128 0x1
 920 0011 10       		.uleb128 0x10
 921 0012 06       		.uleb128 0x6
 922 0013 00       		.byte	0
 923 0014 00       		.byte	0
 924 0015 02       		.uleb128 0x2
 925 0016 24       		.uleb128 0x24
 926 0017 00       		.byte	0
 927 0018 0B       		.uleb128 0xb
 928 0019 0B       		.uleb128 0xb
 929 001a 3E       		.uleb128 0x3e
 930 001b 0B       		.uleb128 0xb
 931 001c 03       		.uleb128 0x3
 932 001d 0E       		.uleb128 0xe
 933 001e 00       		.byte	0
 934 001f 00       		.byte	0
 935 0020 03       		.uleb128 0x3
 936 0021 24       		.uleb128 0x24
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 33


 937 0022 00       		.byte	0
 938 0023 0B       		.uleb128 0xb
 939 0024 0B       		.uleb128 0xb
 940 0025 3E       		.uleb128 0x3e
 941 0026 0B       		.uleb128 0xb
 942 0027 03       		.uleb128 0x3
 943 0028 08       		.uleb128 0x8
 944 0029 00       		.byte	0
 945 002a 00       		.byte	0
 946 002b 04       		.uleb128 0x4
 947 002c 16       		.uleb128 0x16
 948 002d 00       		.byte	0
 949 002e 03       		.uleb128 0x3
 950 002f 0E       		.uleb128 0xe
 951 0030 3A       		.uleb128 0x3a
 952 0031 0B       		.uleb128 0xb
 953 0032 3B       		.uleb128 0x3b
 954 0033 0B       		.uleb128 0xb
 955 0034 49       		.uleb128 0x49
 956 0035 13       		.uleb128 0x13
 957 0036 00       		.byte	0
 958 0037 00       		.byte	0
 959 0038 05       		.uleb128 0x5
 960 0039 35       		.uleb128 0x35
 961 003a 00       		.byte	0
 962 003b 49       		.uleb128 0x49
 963 003c 13       		.uleb128 0x13
 964 003d 00       		.byte	0
 965 003e 00       		.byte	0
 966 003f 06       		.uleb128 0x6
 967 0040 2E       		.uleb128 0x2e
 968 0041 00       		.byte	0
 969 0042 3F       		.uleb128 0x3f
 970 0043 0C       		.uleb128 0xc
 971 0044 03       		.uleb128 0x3
 972 0045 0E       		.uleb128 0xe
 973 0046 3A       		.uleb128 0x3a
 974 0047 0B       		.uleb128 0xb
 975 0048 3B       		.uleb128 0x3b
 976 0049 0B       		.uleb128 0xb
 977 004a 27       		.uleb128 0x27
 978 004b 0C       		.uleb128 0xc
 979 004c 11       		.uleb128 0x11
 980 004d 01       		.uleb128 0x1
 981 004e 12       		.uleb128 0x12
 982 004f 01       		.uleb128 0x1
 983 0050 40       		.uleb128 0x40
 984 0051 06       		.uleb128 0x6
 985 0052 9642     		.uleb128 0x2116
 986 0054 0C       		.uleb128 0xc
 987 0055 00       		.byte	0
 988 0056 00       		.byte	0
 989 0057 07       		.uleb128 0x7
 990 0058 2E       		.uleb128 0x2e
 991 0059 01       		.byte	0x1
 992 005a 3F       		.uleb128 0x3f
 993 005b 0C       		.uleb128 0xc
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 34


 994 005c 03       		.uleb128 0x3
 995 005d 0E       		.uleb128 0xe
 996 005e 3A       		.uleb128 0x3a
 997 005f 0B       		.uleb128 0xb
 998 0060 3B       		.uleb128 0x3b
 999 0061 0B       		.uleb128 0xb
 1000 0062 27       		.uleb128 0x27
 1001 0063 0C       		.uleb128 0xc
 1002 0064 11       		.uleb128 0x11
 1003 0065 01       		.uleb128 0x1
 1004 0066 12       		.uleb128 0x12
 1005 0067 01       		.uleb128 0x1
 1006 0068 40       		.uleb128 0x40
 1007 0069 06       		.uleb128 0x6
 1008 006a 9642     		.uleb128 0x2116
 1009 006c 0C       		.uleb128 0xc
 1010 006d 01       		.uleb128 0x1
 1011 006e 13       		.uleb128 0x13
 1012 006f 00       		.byte	0
 1013 0070 00       		.byte	0
 1014 0071 08       		.uleb128 0x8
 1015 0072 34       		.uleb128 0x34
 1016 0073 00       		.byte	0
 1017 0074 03       		.uleb128 0x3
 1018 0075 0E       		.uleb128 0xe
 1019 0076 3A       		.uleb128 0x3a
 1020 0077 0B       		.uleb128 0xb
 1021 0078 3B       		.uleb128 0x3b
 1022 0079 0B       		.uleb128 0xb
 1023 007a 49       		.uleb128 0x49
 1024 007b 13       		.uleb128 0x13
 1025 007c 02       		.uleb128 0x2
 1026 007d 0A       		.uleb128 0xa
 1027 007e 00       		.byte	0
 1028 007f 00       		.byte	0
 1029 0080 09       		.uleb128 0x9
 1030 0081 2E       		.uleb128 0x2e
 1031 0082 00       		.byte	0
 1032 0083 3F       		.uleb128 0x3f
 1033 0084 0C       		.uleb128 0xc
 1034 0085 03       		.uleb128 0x3
 1035 0086 0E       		.uleb128 0xe
 1036 0087 3A       		.uleb128 0x3a
 1037 0088 0B       		.uleb128 0xb
 1038 0089 3B       		.uleb128 0x3b
 1039 008a 0B       		.uleb128 0xb
 1040 008b 27       		.uleb128 0x27
 1041 008c 0C       		.uleb128 0xc
 1042 008d 11       		.uleb128 0x11
 1043 008e 01       		.uleb128 0x1
 1044 008f 12       		.uleb128 0x12
 1045 0090 01       		.uleb128 0x1
 1046 0091 40       		.uleb128 0x40
 1047 0092 06       		.uleb128 0x6
 1048 0093 9742     		.uleb128 0x2117
 1049 0095 0C       		.uleb128 0xc
 1050 0096 00       		.byte	0
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 35


 1051 0097 00       		.byte	0
 1052 0098 0A       		.uleb128 0xa
 1053 0099 2E       		.uleb128 0x2e
 1054 009a 01       		.byte	0x1
 1055 009b 3F       		.uleb128 0x3f
 1056 009c 0C       		.uleb128 0xc
 1057 009d 03       		.uleb128 0x3
 1058 009e 0E       		.uleb128 0xe
 1059 009f 3A       		.uleb128 0x3a
 1060 00a0 0B       		.uleb128 0xb
 1061 00a1 3B       		.uleb128 0x3b
 1062 00a2 05       		.uleb128 0x5
 1063 00a3 27       		.uleb128 0x27
 1064 00a4 0C       		.uleb128 0xc
 1065 00a5 11       		.uleb128 0x11
 1066 00a6 01       		.uleb128 0x1
 1067 00a7 12       		.uleb128 0x12
 1068 00a8 01       		.uleb128 0x1
 1069 00a9 40       		.uleb128 0x40
 1070 00aa 06       		.uleb128 0x6
 1071 00ab 9742     		.uleb128 0x2117
 1072 00ad 0C       		.uleb128 0xc
 1073 00ae 01       		.uleb128 0x1
 1074 00af 13       		.uleb128 0x13
 1075 00b0 00       		.byte	0
 1076 00b1 00       		.byte	0
 1077 00b2 0B       		.uleb128 0xb
 1078 00b3 05       		.uleb128 0x5
 1079 00b4 00       		.byte	0
 1080 00b5 03       		.uleb128 0x3
 1081 00b6 0E       		.uleb128 0xe
 1082 00b7 3A       		.uleb128 0x3a
 1083 00b8 0B       		.uleb128 0xb
 1084 00b9 3B       		.uleb128 0x3b
 1085 00ba 05       		.uleb128 0x5
 1086 00bb 49       		.uleb128 0x49
 1087 00bc 13       		.uleb128 0x13
 1088 00bd 02       		.uleb128 0x2
 1089 00be 0A       		.uleb128 0xa
 1090 00bf 00       		.byte	0
 1091 00c0 00       		.byte	0
 1092 00c1 0C       		.uleb128 0xc
 1093 00c2 2E       		.uleb128 0x2e
 1094 00c3 01       		.byte	0x1
 1095 00c4 3F       		.uleb128 0x3f
 1096 00c5 0C       		.uleb128 0xc
 1097 00c6 03       		.uleb128 0x3
 1098 00c7 0E       		.uleb128 0xe
 1099 00c8 3A       		.uleb128 0x3a
 1100 00c9 0B       		.uleb128 0xb
 1101 00ca 3B       		.uleb128 0x3b
 1102 00cb 05       		.uleb128 0x5
 1103 00cc 27       		.uleb128 0x27
 1104 00cd 0C       		.uleb128 0xc
 1105 00ce 49       		.uleb128 0x49
 1106 00cf 13       		.uleb128 0x13
 1107 00d0 11       		.uleb128 0x11
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 36


 1108 00d1 01       		.uleb128 0x1
 1109 00d2 12       		.uleb128 0x12
 1110 00d3 01       		.uleb128 0x1
 1111 00d4 40       		.uleb128 0x40
 1112 00d5 06       		.uleb128 0x6
 1113 00d6 9742     		.uleb128 0x2117
 1114 00d8 0C       		.uleb128 0xc
 1115 00d9 01       		.uleb128 0x1
 1116 00da 13       		.uleb128 0x13
 1117 00db 00       		.byte	0
 1118 00dc 00       		.byte	0
 1119 00dd 0D       		.uleb128 0xd
 1120 00de 34       		.uleb128 0x34
 1121 00df 00       		.byte	0
 1122 00e0 03       		.uleb128 0x3
 1123 00e1 0E       		.uleb128 0xe
 1124 00e2 3A       		.uleb128 0x3a
 1125 00e3 0B       		.uleb128 0xb
 1126 00e4 3B       		.uleb128 0x3b
 1127 00e5 05       		.uleb128 0x5
 1128 00e6 49       		.uleb128 0x49
 1129 00e7 13       		.uleb128 0x13
 1130 00e8 02       		.uleb128 0x2
 1131 00e9 0A       		.uleb128 0xa
 1132 00ea 00       		.byte	0
 1133 00eb 00       		.byte	0
 1134 00ec 0E       		.uleb128 0xe
 1135 00ed 2E       		.uleb128 0x2e
 1136 00ee 00       		.byte	0
 1137 00ef 3F       		.uleb128 0x3f
 1138 00f0 0C       		.uleb128 0xc
 1139 00f1 03       		.uleb128 0x3
 1140 00f2 0E       		.uleb128 0xe
 1141 00f3 3A       		.uleb128 0x3a
 1142 00f4 0B       		.uleb128 0xb
 1143 00f5 3B       		.uleb128 0x3b
 1144 00f6 05       		.uleb128 0x5
 1145 00f7 27       		.uleb128 0x27
 1146 00f8 0C       		.uleb128 0xc
 1147 00f9 49       		.uleb128 0x49
 1148 00fa 13       		.uleb128 0x13
 1149 00fb 11       		.uleb128 0x11
 1150 00fc 01       		.uleb128 0x1
 1151 00fd 12       		.uleb128 0x12
 1152 00fe 01       		.uleb128 0x1
 1153 00ff 40       		.uleb128 0x40
 1154 0100 06       		.uleb128 0x6
 1155 0101 9742     		.uleb128 0x2117
 1156 0103 0C       		.uleb128 0xc
 1157 0104 00       		.byte	0
 1158 0105 00       		.byte	0
 1159 0106 0F       		.uleb128 0xf
 1160 0107 34       		.uleb128 0x34
 1161 0108 00       		.byte	0
 1162 0109 03       		.uleb128 0x3
 1163 010a 0E       		.uleb128 0xe
 1164 010b 3A       		.uleb128 0x3a
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 37


 1165 010c 0B       		.uleb128 0xb
 1166 010d 3B       		.uleb128 0x3b
 1167 010e 0B       		.uleb128 0xb
 1168 010f 49       		.uleb128 0x49
 1169 0110 13       		.uleb128 0x13
 1170 0111 3F       		.uleb128 0x3f
 1171 0112 0C       		.uleb128 0xc
 1172 0113 02       		.uleb128 0x2
 1173 0114 0A       		.uleb128 0xa
 1174 0115 00       		.byte	0
 1175 0116 00       		.byte	0
 1176 0117 00       		.byte	0
 1177              		.section	.debug_loc,"",%progbits
 1178              	.Ldebug_loc0:
 1179              	.LLST0:
 1180 0000 00000000 		.4byte	.LFB0
 1181 0004 02000000 		.4byte	.LCFI0
 1182 0008 0200     		.2byte	0x2
 1183 000a 7D       		.byte	0x7d
 1184 000b 00       		.sleb128 0
 1185 000c 02000000 		.4byte	.LCFI0
 1186 0010 04000000 		.4byte	.LCFI1
 1187 0014 0200     		.2byte	0x2
 1188 0016 7D       		.byte	0x7d
 1189 0017 08       		.sleb128 8
 1190 0018 04000000 		.4byte	.LCFI1
 1191 001c 2A000000 		.4byte	.LFE0
 1192 0020 0200     		.2byte	0x2
 1193 0022 77       		.byte	0x77
 1194 0023 08       		.sleb128 8
 1195 0024 00000000 		.4byte	0
 1196 0028 00000000 		.4byte	0
 1197              	.LLST1:
 1198 002c 00000000 		.4byte	.LFB1
 1199 0030 02000000 		.4byte	.LCFI2
 1200 0034 0200     		.2byte	0x2
 1201 0036 7D       		.byte	0x7d
 1202 0037 00       		.sleb128 0
 1203 0038 02000000 		.4byte	.LCFI2
 1204 003c 04000000 		.4byte	.LCFI3
 1205 0040 0200     		.2byte	0x2
 1206 0042 7D       		.byte	0x7d
 1207 0043 08       		.sleb128 8
 1208 0044 04000000 		.4byte	.LCFI3
 1209 0048 06000000 		.4byte	.LCFI4
 1210 004c 0200     		.2byte	0x2
 1211 004e 7D       		.byte	0x7d
 1212 004f 10       		.sleb128 16
 1213 0050 06000000 		.4byte	.LCFI4
 1214 0054 0E010000 		.4byte	.LFE1
 1215 0058 0200     		.2byte	0x2
 1216 005a 77       		.byte	0x77
 1217 005b 10       		.sleb128 16
 1218 005c 00000000 		.4byte	0
 1219 0060 00000000 		.4byte	0
 1220              	.LLST2:
 1221 0064 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 38


 1222 0068 02000000 		.4byte	.LCFI5
 1223 006c 0200     		.2byte	0x2
 1224 006e 7D       		.byte	0x7d
 1225 006f 00       		.sleb128 0
 1226 0070 02000000 		.4byte	.LCFI5
 1227 0074 04000000 		.4byte	.LCFI6
 1228 0078 0200     		.2byte	0x2
 1229 007a 7D       		.byte	0x7d
 1230 007b 04       		.sleb128 4
 1231 007c 04000000 		.4byte	.LCFI6
 1232 0080 5E000000 		.4byte	.LFE2
 1233 0084 0200     		.2byte	0x2
 1234 0086 77       		.byte	0x77
 1235 0087 04       		.sleb128 4
 1236 0088 00000000 		.4byte	0
 1237 008c 00000000 		.4byte	0
 1238              	.LLST3:
 1239 0090 00000000 		.4byte	.LFB3
 1240 0094 02000000 		.4byte	.LCFI7
 1241 0098 0200     		.2byte	0x2
 1242 009a 7D       		.byte	0x7d
 1243 009b 00       		.sleb128 0
 1244 009c 02000000 		.4byte	.LCFI7
 1245 00a0 04000000 		.4byte	.LCFI8
 1246 00a4 0200     		.2byte	0x2
 1247 00a6 7D       		.byte	0x7d
 1248 00a7 04       		.sleb128 4
 1249 00a8 04000000 		.4byte	.LCFI8
 1250 00ac 5E000000 		.4byte	.LFE3
 1251 00b0 0200     		.2byte	0x2
 1252 00b2 77       		.byte	0x77
 1253 00b3 04       		.sleb128 4
 1254 00b4 00000000 		.4byte	0
 1255 00b8 00000000 		.4byte	0
 1256              	.LLST4:
 1257 00bc 00000000 		.4byte	.LFB4
 1258 00c0 02000000 		.4byte	.LCFI9
 1259 00c4 0200     		.2byte	0x2
 1260 00c6 7D       		.byte	0x7d
 1261 00c7 00       		.sleb128 0
 1262 00c8 02000000 		.4byte	.LCFI9
 1263 00cc 04000000 		.4byte	.LCFI10
 1264 00d0 0200     		.2byte	0x2
 1265 00d2 7D       		.byte	0x7d
 1266 00d3 04       		.sleb128 4
 1267 00d4 04000000 		.4byte	.LCFI10
 1268 00d8 06000000 		.4byte	.LCFI11
 1269 00dc 0200     		.2byte	0x2
 1270 00de 7D       		.byte	0x7d
 1271 00df 10       		.sleb128 16
 1272 00e0 06000000 		.4byte	.LCFI11
 1273 00e4 20000000 		.4byte	.LFE4
 1274 00e8 0200     		.2byte	0x2
 1275 00ea 77       		.byte	0x77
 1276 00eb 10       		.sleb128 16
 1277 00ec 00000000 		.4byte	0
 1278 00f0 00000000 		.4byte	0
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 39


 1279              	.LLST5:
 1280 00f4 00000000 		.4byte	.LFB5
 1281 00f8 02000000 		.4byte	.LCFI12
 1282 00fc 0200     		.2byte	0x2
 1283 00fe 7D       		.byte	0x7d
 1284 00ff 00       		.sleb128 0
 1285 0100 02000000 		.4byte	.LCFI12
 1286 0104 04000000 		.4byte	.LCFI13
 1287 0108 0200     		.2byte	0x2
 1288 010a 7D       		.byte	0x7d
 1289 010b 04       		.sleb128 4
 1290 010c 04000000 		.4byte	.LCFI13
 1291 0110 06000000 		.4byte	.LCFI14
 1292 0114 0200     		.2byte	0x2
 1293 0116 7D       		.byte	0x7d
 1294 0117 10       		.sleb128 16
 1295 0118 06000000 		.4byte	.LCFI14
 1296 011c 20000000 		.4byte	.LFE5
 1297 0120 0200     		.2byte	0x2
 1298 0122 77       		.byte	0x77
 1299 0123 10       		.sleb128 16
 1300 0124 00000000 		.4byte	0
 1301 0128 00000000 		.4byte	0
 1302              	.LLST6:
 1303 012c 00000000 		.4byte	.LFB6
 1304 0130 02000000 		.4byte	.LCFI15
 1305 0134 0200     		.2byte	0x2
 1306 0136 7D       		.byte	0x7d
 1307 0137 00       		.sleb128 0
 1308 0138 02000000 		.4byte	.LCFI15
 1309 013c 04000000 		.4byte	.LCFI16
 1310 0140 0200     		.2byte	0x2
 1311 0142 7D       		.byte	0x7d
 1312 0143 04       		.sleb128 4
 1313 0144 04000000 		.4byte	.LCFI16
 1314 0148 06000000 		.4byte	.LCFI17
 1315 014c 0200     		.2byte	0x2
 1316 014e 7D       		.byte	0x7d
 1317 014f 10       		.sleb128 16
 1318 0150 06000000 		.4byte	.LCFI17
 1319 0154 20000000 		.4byte	.LFE6
 1320 0158 0200     		.2byte	0x2
 1321 015a 77       		.byte	0x77
 1322 015b 10       		.sleb128 16
 1323 015c 00000000 		.4byte	0
 1324 0160 00000000 		.4byte	0
 1325              	.LLST7:
 1326 0164 00000000 		.4byte	.LFB7
 1327 0168 02000000 		.4byte	.LCFI18
 1328 016c 0200     		.2byte	0x2
 1329 016e 7D       		.byte	0x7d
 1330 016f 00       		.sleb128 0
 1331 0170 02000000 		.4byte	.LCFI18
 1332 0174 04000000 		.4byte	.LCFI19
 1333 0178 0200     		.2byte	0x2
 1334 017a 7D       		.byte	0x7d
 1335 017b 04       		.sleb128 4
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 40


 1336 017c 04000000 		.4byte	.LCFI19
 1337 0180 06000000 		.4byte	.LCFI20
 1338 0184 0200     		.2byte	0x2
 1339 0186 7D       		.byte	0x7d
 1340 0187 10       		.sleb128 16
 1341 0188 06000000 		.4byte	.LCFI20
 1342 018c 20000000 		.4byte	.LFE7
 1343 0190 0200     		.2byte	0x2
 1344 0192 77       		.byte	0x77
 1345 0193 10       		.sleb128 16
 1346 0194 00000000 		.4byte	0
 1347 0198 00000000 		.4byte	0
 1348              	.LLST8:
 1349 019c 00000000 		.4byte	.LFB8
 1350 01a0 02000000 		.4byte	.LCFI21
 1351 01a4 0200     		.2byte	0x2
 1352 01a6 7D       		.byte	0x7d
 1353 01a7 00       		.sleb128 0
 1354 01a8 02000000 		.4byte	.LCFI21
 1355 01ac 04000000 		.4byte	.LCFI22
 1356 01b0 0200     		.2byte	0x2
 1357 01b2 7D       		.byte	0x7d
 1358 01b3 04       		.sleb128 4
 1359 01b4 04000000 		.4byte	.LCFI22
 1360 01b8 06000000 		.4byte	.LCFI23
 1361 01bc 0200     		.2byte	0x2
 1362 01be 7D       		.byte	0x7d
 1363 01bf 10       		.sleb128 16
 1364 01c0 06000000 		.4byte	.LCFI23
 1365 01c4 20000000 		.4byte	.LFE8
 1366 01c8 0200     		.2byte	0x2
 1367 01ca 77       		.byte	0x77
 1368 01cb 10       		.sleb128 16
 1369 01cc 00000000 		.4byte	0
 1370 01d0 00000000 		.4byte	0
 1371              	.LLST9:
 1372 01d4 00000000 		.4byte	.LFB9
 1373 01d8 02000000 		.4byte	.LCFI24
 1374 01dc 0200     		.2byte	0x2
 1375 01de 7D       		.byte	0x7d
 1376 01df 00       		.sleb128 0
 1377 01e0 02000000 		.4byte	.LCFI24
 1378 01e4 04000000 		.4byte	.LCFI25
 1379 01e8 0200     		.2byte	0x2
 1380 01ea 7D       		.byte	0x7d
 1381 01eb 04       		.sleb128 4
 1382 01ec 04000000 		.4byte	.LCFI25
 1383 01f0 06000000 		.4byte	.LCFI26
 1384 01f4 0200     		.2byte	0x2
 1385 01f6 7D       		.byte	0x7d
 1386 01f7 10       		.sleb128 16
 1387 01f8 06000000 		.4byte	.LCFI26
 1388 01fc 20000000 		.4byte	.LFE9
 1389 0200 0200     		.2byte	0x2
 1390 0202 77       		.byte	0x77
 1391 0203 10       		.sleb128 16
 1392 0204 00000000 		.4byte	0
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 41


 1393 0208 00000000 		.4byte	0
 1394              	.LLST10:
 1395 020c 00000000 		.4byte	.LFB10
 1396 0210 02000000 		.4byte	.LCFI27
 1397 0214 0200     		.2byte	0x2
 1398 0216 7D       		.byte	0x7d
 1399 0217 00       		.sleb128 0
 1400 0218 02000000 		.4byte	.LCFI27
 1401 021c 04000000 		.4byte	.LCFI28
 1402 0220 0200     		.2byte	0x2
 1403 0222 7D       		.byte	0x7d
 1404 0223 04       		.sleb128 4
 1405 0224 04000000 		.4byte	.LCFI28
 1406 0228 18000000 		.4byte	.LFE10
 1407 022c 0200     		.2byte	0x2
 1408 022e 77       		.byte	0x77
 1409 022f 04       		.sleb128 4
 1410 0230 00000000 		.4byte	0
 1411 0234 00000000 		.4byte	0
 1412              	.LLST11:
 1413 0238 00000000 		.4byte	.LFB11
 1414 023c 02000000 		.4byte	.LCFI29
 1415 0240 0200     		.2byte	0x2
 1416 0242 7D       		.byte	0x7d
 1417 0243 00       		.sleb128 0
 1418 0244 02000000 		.4byte	.LCFI29
 1419 0248 04000000 		.4byte	.LCFI30
 1420 024c 0200     		.2byte	0x2
 1421 024e 7D       		.byte	0x7d
 1422 024f 04       		.sleb128 4
 1423 0250 04000000 		.4byte	.LCFI30
 1424 0254 18000000 		.4byte	.LFE11
 1425 0258 0200     		.2byte	0x2
 1426 025a 77       		.byte	0x77
 1427 025b 04       		.sleb128 4
 1428 025c 00000000 		.4byte	0
 1429 0260 00000000 		.4byte	0
 1430              		.section	.debug_aranges,"",%progbits
 1431 0000 74000000 		.4byte	0x74
 1432 0004 0200     		.2byte	0x2
 1433 0006 00000000 		.4byte	.Ldebug_info0
 1434 000a 04       		.byte	0x4
 1435 000b 00       		.byte	0
 1436 000c 0000     		.2byte	0
 1437 000e 0000     		.2byte	0
 1438 0010 00000000 		.4byte	.LFB0
 1439 0014 2A000000 		.4byte	.LFE0-.LFB0
 1440 0018 00000000 		.4byte	.LFB1
 1441 001c 0E010000 		.4byte	.LFE1-.LFB1
 1442 0020 00000000 		.4byte	.LFB2
 1443 0024 5E000000 		.4byte	.LFE2-.LFB2
 1444 0028 00000000 		.4byte	.LFB3
 1445 002c 5E000000 		.4byte	.LFE3-.LFB3
 1446 0030 00000000 		.4byte	.LFB4
 1447 0034 20000000 		.4byte	.LFE4-.LFB4
 1448 0038 00000000 		.4byte	.LFB5
 1449 003c 20000000 		.4byte	.LFE5-.LFB5
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 42


 1450 0040 00000000 		.4byte	.LFB6
 1451 0044 20000000 		.4byte	.LFE6-.LFB6
 1452 0048 00000000 		.4byte	.LFB7
 1453 004c 20000000 		.4byte	.LFE7-.LFB7
 1454 0050 00000000 		.4byte	.LFB8
 1455 0054 20000000 		.4byte	.LFE8-.LFB8
 1456 0058 00000000 		.4byte	.LFB9
 1457 005c 20000000 		.4byte	.LFE9-.LFB9
 1458 0060 00000000 		.4byte	.LFB10
 1459 0064 18000000 		.4byte	.LFE10-.LFB10
 1460 0068 00000000 		.4byte	.LFB11
 1461 006c 18000000 		.4byte	.LFE11-.LFB11
 1462 0070 00000000 		.4byte	0
 1463 0074 00000000 		.4byte	0
 1464              		.section	.debug_ranges,"",%progbits
 1465              	.Ldebug_ranges0:
 1466 0000 00000000 		.4byte	.LFB0
 1467 0004 2A000000 		.4byte	.LFE0
 1468 0008 00000000 		.4byte	.LFB1
 1469 000c 0E010000 		.4byte	.LFE1
 1470 0010 00000000 		.4byte	.LFB2
 1471 0014 5E000000 		.4byte	.LFE2
 1472 0018 00000000 		.4byte	.LFB3
 1473 001c 5E000000 		.4byte	.LFE3
 1474 0020 00000000 		.4byte	.LFB4
 1475 0024 20000000 		.4byte	.LFE4
 1476 0028 00000000 		.4byte	.LFB5
 1477 002c 20000000 		.4byte	.LFE5
 1478 0030 00000000 		.4byte	.LFB6
 1479 0034 20000000 		.4byte	.LFE6
 1480 0038 00000000 		.4byte	.LFB7
 1481 003c 20000000 		.4byte	.LFE7
 1482 0040 00000000 		.4byte	.LFB8
 1483 0044 20000000 		.4byte	.LFE8
 1484 0048 00000000 		.4byte	.LFB9
 1485 004c 20000000 		.4byte	.LFE9
 1486 0050 00000000 		.4byte	.LFB10
 1487 0054 18000000 		.4byte	.LFE10
 1488 0058 00000000 		.4byte	.LFB11
 1489 005c 18000000 		.4byte	.LFE11
 1490 0060 00000000 		.4byte	0
 1491 0064 00000000 		.4byte	0
 1492              		.section	.debug_line,"",%progbits
 1493              	.Ldebug_line0:
 1494 0000 3F010000 		.section	.debug_str,"MS",%progbits,1
 1494      02004400 
 1494      00000201 
 1494      FB0E0D00 
 1494      01010101 
 1495              	.LASF15:
 1496 0000 72656731 		.ascii	"reg16\000"
 1496      3600
 1497              	.LASF21:
 1498 0006 50574D5F 		.ascii	"PWM_4_WritePeriod\000"
 1498      345F5772 
 1498      69746550 
 1498      6572696F 
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 43


 1498      6400
 1499              	.LASF23:
 1500 0018 70657269 		.ascii	"period\000"
 1500      6F6400
 1501              	.LASF3:
 1502 001f 73686F72 		.ascii	"short unsigned int\000"
 1502      7420756E 
 1502      7369676E 
 1502      65642069 
 1502      6E7400
 1503              	.LASF36:
 1504 0032 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\PWM_4.c\000"
 1504      6E657261 
 1504      7465645F 
 1504      536F7572 
 1504      63655C50 
 1505              	.LASF22:
 1506 0053 50574D5F 		.ascii	"PWM_4_WriteCompare\000"
 1506      345F5772 
 1506      69746543 
 1506      6F6D7061 
 1506      726500
 1507              	.LASF11:
 1508 0066 666C6F61 		.ascii	"float\000"
 1508      7400
 1509              	.LASF34:
 1510 006c 50574D5F 		.ascii	"PWM_4_ReadPeriod\000"
 1510      345F5265 
 1510      61645065 
 1510      72696F64 
 1510      00
 1511              	.LASF1:
 1512 007d 756E7369 		.ascii	"unsigned char\000"
 1512      676E6564 
 1512      20636861 
 1512      7200
 1513              	.LASF14:
 1514 008b 72656738 		.ascii	"reg8\000"
 1514      00
 1515              	.LASF5:
 1516 0090 6C6F6E67 		.ascii	"long unsigned int\000"
 1516      20756E73 
 1516      69676E65 
 1516      6420696E 
 1516      7400
 1517              	.LASF9:
 1518 00a2 75696E74 		.ascii	"uint8\000"
 1518      3800
 1519              	.LASF32:
 1520 00a8 636F6E74 		.ascii	"control\000"
 1520      726F6C00 
 1521              	.LASF37:
 1522 00b0 433A5C55 		.ascii	"C:\\Users\\biomimetics\\Dropbox\\SMC\\PSoC\\PSoC 5\\"
 1522      73657273 
 1522      5C62696F 
 1522      6D696D65 
 1522      74696373 
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 44


 1523 00dd 46726F67 		.ascii	"Frog Leg Jacobian QUADRUPED\\Design02.cydsn\000"
 1523      204C6567 
 1523      204A6163 
 1523      6F626961 
 1523      6E205155 
 1524              	.LASF25:
 1525 0108 50574D5F 		.ascii	"PWM_4_SetInterruptMode\000"
 1525      345F5365 
 1525      74496E74 
 1525      65727275 
 1525      70744D6F 
 1526              	.LASF29:
 1527 011f 50574D5F 		.ascii	"PWM_4_ReadStatusRegister\000"
 1527      345F5265 
 1527      61645374 
 1527      61747573 
 1527      52656769 
 1528              	.LASF12:
 1529 0138 646F7562 		.ascii	"double\000"
 1529      6C6500
 1530              	.LASF20:
 1531 013f 50574D5F 		.ascii	"PWM_4_Init\000"
 1531      345F496E 
 1531      697400
 1532              	.LASF18:
 1533 014a 50574D5F 		.ascii	"PWM_4_Enable\000"
 1533      345F456E 
 1533      61626C65 
 1533      00
 1534              	.LASF33:
 1535 0157 50574D5F 		.ascii	"PWM_4_ReadCompare\000"
 1535      345F5265 
 1535      6164436F 
 1535      6D706172 
 1535      6500
 1536              	.LASF10:
 1537 0169 75696E74 		.ascii	"uint16\000"
 1537      313600
 1538              	.LASF8:
 1539 0170 756E7369 		.ascii	"unsigned int\000"
 1539      676E6564 
 1539      20696E74 
 1539      00
 1540              	.LASF7:
 1541 017d 6C6F6E67 		.ascii	"long long unsigned int\000"
 1541      206C6F6E 
 1541      6720756E 
 1541      7369676E 
 1541      65642069 
 1542              	.LASF28:
 1543 0194 72657375 		.ascii	"result\000"
 1543      6C7400
 1544              	.LASF17:
 1545 019b 50574D5F 		.ascii	"PWM_4_Start\000"
 1545      345F5374 
 1545      61727400 
 1546              	.LASF27:
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 45


 1547 01a7 6374726C 		.ascii	"ctrl\000"
 1547      00
 1548              	.LASF16:
 1549 01ac 73697A65 		.ascii	"sizetype\000"
 1549      74797065 
 1549      00
 1550              	.LASF31:
 1551 01b5 50574D5F 		.ascii	"PWM_4_WriteControlRegister\000"
 1551      345F5772 
 1551      69746543 
 1551      6F6E7472 
 1551      6F6C5265 
 1552              	.LASF6:
 1553 01d0 6C6F6E67 		.ascii	"long long int\000"
 1553      206C6F6E 
 1553      6720696E 
 1553      7400
 1554              	.LASF26:
 1555 01de 696E7465 		.ascii	"interruptMode\000"
 1555      72727570 
 1555      744D6F64 
 1555      6500
 1556              	.LASF38:
 1557 01ec 50574D5F 		.ascii	"PWM_4_initVar\000"
 1557      345F696E 
 1557      69745661 
 1557      7200
 1558              	.LASF2:
 1559 01fa 73686F72 		.ascii	"short int\000"
 1559      7420696E 
 1559      7400
 1560              	.LASF30:
 1561 0204 50574D5F 		.ascii	"PWM_4_ReadControlRegister\000"
 1561      345F5265 
 1561      6164436F 
 1561      6E74726F 
 1561      6C526567 
 1562              	.LASF35:
 1563 021e 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 1563      4320342E 
 1563      372E3320 
 1563      32303133 
 1563      30333132 
 1564 0251 616E6368 		.ascii	"anch revision 196615]\000"
 1564      20726576 
 1564      6973696F 
 1564      6E203139 
 1564      36363135 
 1565              	.LASF19:
 1566 0267 50574D5F 		.ascii	"PWM_4_Stop\000"
 1566      345F5374 
 1566      6F7000
 1567              	.LASF4:
 1568 0272 6C6F6E67 		.ascii	"long int\000"
 1568      20696E74 
 1568      00
 1569              	.LASF13:
ARM GAS  C:\Users\BIOMIM~1\AppData\Local\Temp\ccW1Ip7T.s 			page 46


 1570 027b 63686172 		.ascii	"char\000"
 1570      00
 1571              	.LASF0:
 1572 0280 7369676E 		.ascii	"signed char\000"
 1572      65642063 
 1572      68617200 
 1573              	.LASF24:
 1574 028c 636F6D70 		.ascii	"compare\000"
 1574      61726500 
 1575              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
